{"columns":[{"field":"package","title":"Package"},{"field":"niah_id","title":"NiahID"},{"field":"severity","title":"Severity"},{"field":"published","title":"Published"}],"data":[{"cves":["CVE-2015-3207"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N","cwes_id":["CWE-311","CWE-614"],"description":"In Openshift Origin the cookies being set in console have no 'secure', 'HttpOnly' attributes.","github_reviewed":true,"github_reviewed_at":"2022-07-08T19:20:02Z","installer":"go","language":"go","metadata":{"CVE-2015-3207":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"NONE","baseScore":"5.0","confidentialityImpact":"PARTIAL","exploitabilityScore":"10.0","impactScore":"2.9","integrityImpact":"NONE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:N/C:P/I:N/A:N"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":"5.3","baseSeverity":"MEDIUM","confidentialityImpact":"LOW","exploitabilityScore":"3.9","impactScore":"1.4","integrityImpact":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"},"cwe_ids":["CWE-311"],"lastModifiedDate":"2022-07-14T17:26Z","publishedDate":"2022-07-07T13:15Z","references":["https://bugzilla.redhat.com/show_bug.cgi?id=1221882","https://github.com/openshift/origin/pull/2261","https://github.com/openshift/origin/pull/2291"]}},"modified":"2022-07-15T18:35:26Z","niah_id":"NIAH-go-github.com/openshift/origin-GHSA-rqph-25q9-9jhp","nvd_published_at":"2022-07-07T13:15:00Z","package":"github.com/openshift/origin","published":"2022-07-08T00:00:48Z","purl":"pkg:golang/github.com/openshift/origin","refeid":"GHSA-rqph-25q9-9jhp","references":[],"severity":"MODERATE","summary":"Insecure cookies in Openshift Origin","vendor":"","versions":["[0:1.0.0]"]},{"cves":["CVE-2020-15115"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:N/A:N","cwes_id":["CWE-521"],"description":"### Vulnerability type\nAccess Control\n\n### Workarounds\nThe etcdctl and etcd API do not enforce a specific password length during user creation or user password update operations. [It is the responsibility of the administrator to enforce these requirements](https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/authentication.md#notes-on-password-strength).\n\n### Detail\netcd does not perform any password length validation, which allows for very short passwords, such as those with a length of one. This may allow an attacker to guess or brute-force users\u2019 passwords with little computational effort.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)","github_reviewed":true,"github_reviewed_at":"2022-10-06T23:14:23Z","installer":"go","language":"go","metadata":{"CVE-2020-15115":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"NONE","baseScore":"5.0","confidentialityImpact":"PARTIAL","exploitabilityScore":"10.0","impactScore":"2.9","integrityImpact":"NONE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:N/C:P/I:N/A:N"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":"7.5","baseSeverity":"HIGH","confidentialityImpact":"HIGH","exploitabilityScore":"3.9","impactScore":"3.6","integrityImpact":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"},"cwe_ids":["CWE-521"],"lastModifiedDate":"2022-11-21T20:36Z","publishedDate":"2020-08-06T22:15Z","references":["https://github.com/etcd-io/etcd/security/advisories/GHSA-4993-m7g5-r9hh","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/"]}},"modified":"2022-10-06T23:14:23Z","niah_id":"NIAH-go-go.etcd.io/etcd/client/v3-GHSA-4993-m7g5-r9hh","nvd_published_at":"2020-08-06T22:15:00Z","package":"go.etcd.io/etcd/client/v3","published":"2022-10-06T23:14:23Z","purl":"pkg:golang/go.etcd.io/etcd/client/v3","refeid":"GHSA-4993-m7g5-r9hh","references":[],"severity":"MODERATE","summary":"etcd has no minimum password length","vendor":"","versions":["[3.4.0:3.4.10]"]},{"cves":["CVE-2020-15115"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:N/A:N","cwes_id":["CWE-521"],"description":"### Vulnerability type\nAccess Control\n\n### Workarounds\nThe etcdctl and etcd API do not enforce a specific password length during user creation or user password update operations. [It is the responsibility of the administrator to enforce these requirements](https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/authentication.md#notes-on-password-strength).\n\n### Detail\netcd does not perform any password length validation, which allows for very short passwords, such as those with a length of one. This may allow an attacker to guess or brute-force users\u2019 passwords with little computational effort.\n\n### References\nFind out more on this vulnerability in the [security audit report](https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact the [etcd security committee](https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc)","github_reviewed":true,"github_reviewed_at":"2022-10-06T23:14:23Z","installer":"go","language":"go","metadata":{"CVE-2020-15115":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"NONE","baseScore":"5.0","confidentialityImpact":"PARTIAL","exploitabilityScore":"10.0","impactScore":"2.9","integrityImpact":"NONE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:N/C:P/I:N/A:N"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":"7.5","baseSeverity":"HIGH","confidentialityImpact":"HIGH","exploitabilityScore":"3.9","impactScore":"3.6","integrityImpact":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"},"cwe_ids":["CWE-521"],"lastModifiedDate":"2022-11-21T20:36Z","publishedDate":"2020-08-06T22:15Z","references":["https://github.com/etcd-io/etcd/security/advisories/GHSA-4993-m7g5-r9hh","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/"]}},"modified":"2022-10-06T23:14:23Z","niah_id":"NIAH-go-go.etcd.io/etcd/client/v3-GHSA-4993-m7g5-r9hh","nvd_published_at":"2020-08-06T22:15:00Z","package":"go.etcd.io/etcd/client/v3","published":"2022-10-06T23:14:23Z","purl":"pkg:golang/go.etcd.io/etcd/client/v3","refeid":"GHSA-4993-m7g5-r9hh","references":[],"severity":"MODERATE","summary":"etcd has no minimum password length","vendor":"","versions":["[0:3.3.23]"]},{"cves":["CVE-2021-3908"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H","cwes_id":["CWE-400","CWE-835"],"description":"OctoRPKI does not limit the depth of a certificate chain, allowing for a CA to create children in an ad-hoc fashion, thereby making tree traversal never end.\n\n## Patches \n\n## For more information\nIf you have any questions or comments about this advisory email us at security@cloudflare.com \n","github_reviewed":true,"github_reviewed_at":"2021-11-10T18:18:55Z","installer":"go","language":"go","metadata":{"CVE-2021-3908":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"5.0","confidentialityImpact":"NONE","exploitabilityScore":"10.0","impactScore":"2.9","integrityImpact":"NONE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:N/C:N/I:N/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"7.5","baseSeverity":"HIGH","confidentialityImpact":"NONE","exploitabilityScore":"3.9","impactScore":"3.6","integrityImpact":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"cwe_ids":["CWE-835"],"lastModifiedDate":"2022-08-09T13:42Z","publishedDate":"2021-11-11T22:15Z","references":["https://github.com/cloudflare/cfrpki/security/advisories/GHSA-g5gj-9ggf-9vmq","https://www.debian.org/security/2022/dsa-5041"]}},"modified":"2021-11-10T18:18:55Z","niah_id":"NIAH-go-github.com/cloudflare/cfrpki/cmd/octorpki-GHSA-g5gj-9ggf-9vmq","nvd_published_at":"2021-11-11T22:15:00Z","package":"github.com/cloudflare/cfrpki/cmd/octorpki","published":"2021-11-10T20:38:53Z","purl":"","refeid":"GHSA-g5gj-9ggf-9vmq","references":[],"severity":"MODERATE","summary":"Infinite certificate chain depth results in OctoRPKI running forever","vendor":"","versions":["[0:1.4.0]"]},{"cves":["CVE-2021-36156"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N","cwes_id":["CWE-22"],"description":"An issue was discovered in Grafana Loki through 2.2.1. The header value X-Scope-OrgID is used to construct file paths for rules files, and if crafted to conduct directory traversal such as ae ../../sensitive/path/in/deployment pathname, then Loki will attempt to parse a rules file at that location and include some of the contents in the error message.","github_reviewed":true,"github_reviewed_at":"2021-08-04T18:52:20Z","installer":"go","language":"go","metadata":{"CVE-2021-36156":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"NONE","baseScore":"5.0","confidentialityImpact":"PARTIAL","exploitabilityScore":"10.0","impactScore":"2.9","integrityImpact":"NONE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:N/C:P/I:N/A:N"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":"5.3","baseSeverity":"MEDIUM","confidentialityImpact":"LOW","exploitabilityScore":"3.9","impactScore":"1.4","integrityImpact":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"},"cwe_ids":["CWE-22"],"lastModifiedDate":"2021-09-14T18:46Z","publishedDate":"2021-08-03T15:15Z","references":["https://github.com/grafana/loki/pull/4020#issue-694377133","https://github.com/grafana/loki/releases/tag/v2.3.0"]}},"modified":"2021-09-08T18:11:29Z","niah_id":"NIAH-go-github.com/grafana/loki-GHSA-grj5-8x6q-hc9q","nvd_published_at":"2021-08-03T15:15:00Z","package":"github.com/grafana/loki","published":"2021-09-02T22:00:40Z","purl":"","refeid":"GHSA-grj5-8x6q-hc9q","references":[],"severity":"MODERATE","summary":"Path traversal in Grafana Loki","vendor":"","versions":["[0:2.3.0]"]},{"cves":["CVE-2021-21432"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:A/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:L","cwes_id":["CWE-285","CWE-862","CWE-863"],"description":"### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nThe additional auth mechanism added within https://github.com/go-vela/server/pull/246 enables some malicious user to obtain secrets utilizing the injected credentials within the `~/.netrc` file. Steps to reproduce\n\n1. Create Vela server\n2. Login to Vela UI\n3. Promote yourself to Vela administrator \n    - `UPDATE users SET admin = 't' WHERE name = <username>`\n4. Activate repository within Vela\n5. Add `.vela.yml` to the repository with the following content\n\n    \n    ```yaml\n    version: \"1\"\n    \n    steps:\n    - name: steal\n      image: alpine\n      commands:\n        - cat ~/.netrc\n    ```\n\n1. Look at build logs to find the following content\n\n    ```\n    $ cat ~/.netrc\n    machine <GITHUB URL>\n    login x-oauth-basic\n    password <token>\n    ```\n\n1. Copy the password to be utilized in some later step\n1. Add secret(s) to activated repo\n1. Copy the following script into `main.go`\n\n    ```golang\n    package main\n    \n    import (\n\t    \"fmt\"\n\t    \"github.com/go-vela/sdk-go/vela\"\n\t    \"os\"\n    )\n    \n    func main() {\n\t    // create client to connect to vela\n\t    client, err := vela.NewClient(os.Getenv(\"VELA_SERVER_ADDR\"), \"vela\", nil)\n\t    if err != nil {\n\t\t    panic(err)\n\t    }\n    \n\t    // add PAT to request\n\t    client.Authentication.SetPersonalAccessTokenAuth(os.Getenv(\"VELA_TOKEN\"))\n    \n    \n\t    secrets, _, err := client.Admin.Secret.GetAll(&vela.ListOptions{})\n\t    if err != nil {\n\t\t    panic(err)\n\t    }\n    \n\t    for _, secret := range *secrets {\n\t\t    fmt.Println(*secret.Name)\n\t\t    fmt.Println(*secret.Value)\n\t    }\n    }\n    ```\n\n1. Run the `main.go` with environment specific settings\n   - `VELA_SERVER_ADDR=http://localhost:8080 VELA_TOKEN=<token obtained previously> go run main.go`\n\nThe previously posted script could be updated to utilize any API endpoint(s) the activated user has access against.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\n* Upgrade to `v0.7.5` or later\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\n* No known workarounds\n\n### References\n_Are there any links users can visit to find out more?_\n\n* https://github.com/go-vela/server/pull/246\n* https://docs.github.com/en/enterprise-server@3.0/rest/reference/apps#check-a-token\n\n### For more information\nIf you have any questions or comments about this advisory\n\n* Email us at [vela@target.com](mailto:vela@target.com)","github_reviewed":true,"github_reviewed_at":"2021-05-20T20:12:26Z","installer":"go","language":"go","metadata":{"CVE-2021-21432":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"SINGLE","availabilityImpact":"NONE","baseScore":"3.5","confidentialityImpact":"PARTIAL","exploitabilityScore":"6.8","impactScore":"2.9","integrityImpact":"NONE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"LOW","userInteractionRequired":"True","vectorString":"AV:N/AC:M/Au:S/C:P/I:N/A:N"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":"6.5","baseSeverity":"MEDIUM","confidentialityImpact":"HIGH","exploitabilityScore":"2.8","impactScore":"3.6","integrityImpact":"NONE","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"},"cwe_ids":["CWE-862"],"lastModifiedDate":"2022-08-12T18:02Z","publishedDate":"2021-04-09T18:15Z","references":["https://pkg.go.dev/github.com/go-vela/server","https://github.com/go-vela/server/commit/cb4352918b8ecace9fe969b90404d337b0744d46","https://github.com/go-vela/server/releases/tag/v0.7.5","https://github.com/go-vela/server/pull/337","https://github.com/go-vela/server/security/advisories/GHSA-8j3f-mhq8-gmh4"]}},"modified":"2022-08-15T20:02:53Z","niah_id":"NIAH-go-github.com/go-vela/server-GHSA-8j3f-mhq8-gmh4","nvd_published_at":"2021-04-09T18:15:00Z","package":"github.com/go-vela/server","published":"2022-02-15T01:57:18Z","purl":"pkg:golang/github.com/go-vela/server","refeid":"GHSA-8j3f-mhq8-gmh4","references":[],"severity":"HIGH","summary":"Reject unauthorized access with GitHub PATs","vendor":"","versions":["[0.7.0:0.7.5]"]},{"cves":["CVE-2021-21432"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:A/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:L","cwes_id":["CWE-285","CWE-862","CWE-863"],"description":"### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nThe additional auth mechanism added within https://github.com/go-vela/server/pull/246 enables some malicious user to obtain secrets utilizing the injected credentials within the `~/.netrc` file. Steps to reproduce\n\n1. Create Vela server\n2. Login to Vela UI\n3. Promote yourself to Vela administrator \n    - `UPDATE users SET admin = 't' WHERE name = <username>`\n4. Activate repository within Vela\n5. Add `.vela.yml` to the repository with the following content\n\n    \n    ```yaml\n    version: \"1\"\n    \n    steps:\n    - name: steal\n      image: alpine\n      commands:\n        - cat ~/.netrc\n    ```\n\n1. Look at build logs to find the following content\n\n    ```\n    $ cat ~/.netrc\n    machine <GITHUB URL>\n    login x-oauth-basic\n    password <token>\n    ```\n\n1. Copy the password to be utilized in some later step\n1. Add secret(s) to activated repo\n1. Copy the following script into `main.go`\n\n    ```golang\n    package main\n    \n    import (\n\t    \"fmt\"\n\t    \"github.com/go-vela/sdk-go/vela\"\n\t    \"os\"\n    )\n    \n    func main() {\n\t    // create client to connect to vela\n\t    client, err := vela.NewClient(os.Getenv(\"VELA_SERVER_ADDR\"), \"vela\", nil)\n\t    if err != nil {\n\t\t    panic(err)\n\t    }\n    \n\t    // add PAT to request\n\t    client.Authentication.SetPersonalAccessTokenAuth(os.Getenv(\"VELA_TOKEN\"))\n    \n    \n\t    secrets, _, err := client.Admin.Secret.GetAll(&vela.ListOptions{})\n\t    if err != nil {\n\t\t    panic(err)\n\t    }\n    \n\t    for _, secret := range *secrets {\n\t\t    fmt.Println(*secret.Name)\n\t\t    fmt.Println(*secret.Value)\n\t    }\n    }\n    ```\n\n1. Run the `main.go` with environment specific settings\n   - `VELA_SERVER_ADDR=http://localhost:8080 VELA_TOKEN=<token obtained previously> go run main.go`\n\nThe previously posted script could be updated to utilize any API endpoint(s) the activated user has access against.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\n* Upgrade to `v0.7.5` or later\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\n* No known workarounds\n\n### References\n_Are there any links users can visit to find out more?_\n\n* https://github.com/go-vela/server/pull/246\n* https://docs.github.com/en/enterprise-server@3.0/rest/reference/apps#check-a-token\n\n### For more information\nIf you have any questions or comments about this advisory\n\n* Email us at [vela@target.com](mailto:vela@target.com)","github_reviewed":true,"github_reviewed_at":"2021-05-20T20:12:26Z","installer":"go","language":"go","metadata":{"CVE-2021-21432":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"SINGLE","availabilityImpact":"NONE","baseScore":"3.5","confidentialityImpact":"PARTIAL","exploitabilityScore":"6.8","impactScore":"2.9","integrityImpact":"NONE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"LOW","userInteractionRequired":"True","vectorString":"AV:N/AC:M/Au:S/C:P/I:N/A:N"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":"6.5","baseSeverity":"MEDIUM","confidentialityImpact":"HIGH","exploitabilityScore":"2.8","impactScore":"3.6","integrityImpact":"NONE","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"},"cwe_ids":["CWE-862"],"lastModifiedDate":"2022-08-12T18:02Z","publishedDate":"2021-04-09T18:15Z","references":["https://pkg.go.dev/github.com/go-vela/server","https://github.com/go-vela/server/commit/cb4352918b8ecace9fe969b90404d337b0744d46","https://github.com/go-vela/server/releases/tag/v0.7.5","https://github.com/go-vela/server/pull/337","https://github.com/go-vela/server/security/advisories/GHSA-8j3f-mhq8-gmh4"]}},"modified":"2022-08-15T20:02:53Z","niah_id":"NIAH-go-github.com/go-vela/server/api-GHSA-8j3f-mhq8-gmh4","nvd_published_at":"2021-04-09T18:15:00Z","package":"github.com/go-vela/server/api","published":"2022-02-15T01:57:18Z","purl":"pkg:golang/github.com/go-vela/server/api","refeid":"GHSA-8j3f-mhq8-gmh4","references":[],"severity":"HIGH","summary":"Reject unauthorized access with GitHub PATs","vendor":"","versions":["[0.7.0:0.7.5]"]},{"cves":["CVE-2022-23508"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H","cwes_id":["CWE-284","CWE-552"],"description":"### Impact\nA vulnerability in GitOps run could allow a local user or process to alter a Kubernetes cluster's resources.\n\nGitOps run has a local S3 bucket which it uses for synchronising files that are later applied against a Kubernetes cluster. Its endpoint had no security controls to block unauthorised access, therefore allowing local users (and processes) on the same machine to see and alter the bucket content.\n\nBy leveraging this vulnerability, an attacker could pick a workload of their choosing and inject it into the S3 bucket, which resulted in the successful deployment in the target cluster, without the need to provide any credentials to either the S3 bucket nor the target Kubernetes cluster.\n\n### Patches\nThis vulnerability has been fixed by commits [75268c4](https://github.com/weaveworks/weave-gitops/pull/3114/commits/75268c4d2c8f7e4db22c63d76b451ba6545d117f) and [966823b](https://github.com/weaveworks/weave-gitops/pull/3102/commits/966823bbda8c539a4661e2a4f8607c9307ba6225). Users should upgrade to Weave GitOps version >= v0.12.0 released on 08/12/2022.\n\n### Workarounds\nThere is no workaround for this vulnerability.\n\n### References\nDisclosed by Paulo Gomes, Senior Software Engineer, Weaveworks.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [Weave GitOps repository](https://github.com/weaveworks/weave-gitops)\n- Email us at [support@weave.works](mailto:support@weave.works)\n","github_reviewed":true,"github_reviewed_at":"2023-01-09T19:45:01Z","installer":"go","language":"go","metadata":{"CVE-2022-23508":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"HIGH","baseScore":"7.8","confidentialityImpact":"HIGH","exploitabilityScore":"1.8","impactScore":"5.9","integrityImpact":"HIGH","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"},"cvssV3":{"attackComplexity":"","attackVector":"LOCAL","availabilityImpact":"HIGH","baseScore":"7.8","baseSeverity":"HIGH","confidentialityImpact":"HIGH","exploitabilityScore":"1.8","impactScore":"5.9","integrityImpact":"HIGH","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"},"cwe_ids":["CWE-552"],"lastModifiedDate":"2023-01-13T20:28Z","publishedDate":"2023-01-09T13:15Z","references":["https://github.com/weaveworks/weave-gitops/pull/3114/commits/75268c4d2c8f7e4db22c63d76b451ba6545d117f","https://github.com/weaveworks/weave-gitops/pull/3102/commits/966823bbda8c539a4661e2a4f8607c9307ba6225","https://github.com/weaveworks/weave-gitops/security/advisories/GHSA-wr3c-g326-486c"]}},"modified":"2023-01-09T19:45:01Z","niah_id":"NIAH-go-github.com/weaveworks/weave-gitops-GHSA-wr3c-g326-486c","nvd_published_at":"2023-01-09T13:15:00Z","package":"github.com/weaveworks/weave-gitops","published":"2023-01-09T19:45:01Z","purl":"","refeid":"GHSA-wr3c-g326-486c","references":[],"severity":"HIGH","summary":"GitOps Run allows for Kubernetes workload injection","vendor":"","versions":["[0:0.12.0]"]},{"cves":["CVE-2022-45969"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H","cwes_id":["CWE-22"],"description":"In versions of Alist prior to 3.6.0, a user with only file upload permission can bypass the base path restriction by using '... /' to bypass the base path restriction and upload files to an arbitrary path.\n","github_reviewed":true,"github_reviewed_at":"2022-12-16T17:21:27Z","installer":"go","language":"go","metadata":{"CVE-2022-45969":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"HIGH","baseScore":"9.8","confidentialityImpact":"HIGH","exploitabilityScore":"3.9","impactScore":"5.9","integrityImpact":"HIGH","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"9.8","baseSeverity":"CRITICAL","confidentialityImpact":"HIGH","exploitabilityScore":"3.9","impactScore":"5.9","integrityImpact":"HIGH","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"},"cwe_ids":["CWE-22"],"lastModifiedDate":"2022-12-20T03:33Z","publishedDate":"2022-12-15T23:15Z","references":["https://github.com/alist-org/alist/issues/2449"]}},"modified":"2022-12-20T15:23:21Z","niah_id":"NIAH-go-github.com/alist-org/alist/v3-GHSA-pmg2-rph8-p8r6","nvd_published_at":"2022-12-15T23:15:00Z","package":"github.com/alist-org/alist/v3","published":"2022-12-16T00:30:44Z","purl":"","refeid":"GHSA-pmg2-rph8-p8r6","references":[],"severity":"CRITICAL","summary":"Alist vulnerable to Path Traversal","vendor":"","versions":["[0:3.6.0]"]},{"cves":["CVE-2022-29177"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H","cwes_id":["CWE-400"],"description":"### Impact\n\nA vulnerable node, if configured to use high verbosity logging, can be made to crash when handling specially crafted p2p messages sent from an attacker node. \n\n### Patches\n\nThe following PR addresses the problem: https://github.com/ethereum/go-ethereum/pull/24507\n\n### Workarounds\n\nAside from applying the PR linked above, setting loglevel to default level (`INFO`) makes the node not vulnerable to this attack.\n\n### Credits\n\nThis bug was reported by `nrv` via bounty@ethereum.org, who has gracefully requested that the bounty rewards be donated to M\u00e9decins sans fronti\u00e8res.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https://github.com/ethereum/go-ethereum)\n","github_reviewed":true,"github_reviewed_at":"2022-05-24T20:54:55Z","installer":"go","language":"go","metadata":{"CVE-2022-29177":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"4.3","confidentialityImpact":"NONE","exploitabilityScore":"8.6","impactScore":"2.9","integrityImpact":"NONE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:M/Au:N/C:N/I:N/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"5.9","baseSeverity":"MEDIUM","confidentialityImpact":"NONE","exploitabilityScore":"2.2","impactScore":"3.6","integrityImpact":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"},"cwe_ids":["NVD-CWE-noinfo"],"lastModifiedDate":"2022-06-06T17:47Z","publishedDate":"2022-05-20T17:15Z","references":["https://github.com/ethereum/go-ethereum/security/advisories/GHSA-wjxw-gh3m-7pm5","https://github.com/ethereum/go-ethereum/pull/24507"]}},"modified":"2022-06-07T14:30:11Z","niah_id":"NIAH-go-github.com/ethereum/go-ethereum-GHSA-wjxw-gh3m-7pm5","nvd_published_at":"2022-05-20T17:15:00Z","package":"github.com/ethereum/go-ethereum","published":"2022-05-24T20:54:55Z","purl":"pkg:golang/github.com/ethereum/go-ethereum","refeid":"GHSA-wjxw-gh3m-7pm5","references":[],"severity":"MODERATE","summary":"DoS via malicious p2p message in Go Ethereum","vendor":"","versions":["[0:1.10.17]"]},{"cves":["CVE-2022-4804"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N","cwes_id":["CWE-285"],"description":"usememos/memos 0.9.0 and prior is vulnerable to Improper Authorization.","github_reviewed":true,"github_reviewed_at":"2022-12-30T19:58:34Z","installer":"go","language":"go","metadata":{"CVE-2022-4804":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"NONE","baseScore":"5.3","confidentialityImpact":"LOW","exploitabilityScore":"3.9","impactScore":"1.4","integrityImpact":"NONE","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":"5.3","baseSeverity":"MEDIUM","confidentialityImpact":"LOW","exploitabilityScore":"3.9","impactScore":"1.4","integrityImpact":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"},"cwe_ids":["CWE-285"],"lastModifiedDate":"2023-01-05T21:57Z","publishedDate":"2022-12-28T14:15Z","references":["https://github.com/usememos/memos/commit/3556ae4e651d9443dc3bb8a170dd3cc726517a53","https://huntr.dev/bounties/4ee48a1e-6332-4d95-a360-9c392643c533"]}},"modified":"2023-01-10T15:47:06Z","niah_id":"NIAH-go-github.com/usememos/memos-GHSA-qw36-rw5q-gxcq","nvd_published_at":"2022-12-28T14:15:00Z","package":"github.com/usememos/memos","published":"2022-12-28T15:30:45Z","purl":"","refeid":"GHSA-qw36-rw5q-gxcq","references":[],"severity":"MODERATE","summary":"usememos/memos Improper Authorization vulnerability","vendor":"","versions":["[0:0.9.1]"]},{"cves":["CVE-2020-8945"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H","cwes_id":["CWE-416"],"description":"The proglottis Go wrapper before 0.1.1 for the GPGME library has a use-after-free, as demonstrated by use for container image pulls by Docker or CRI-O. This leads to a crash or potential code execution during GPG signature verification.","github_reviewed":true,"github_reviewed_at":"2021-05-17T22:00:21Z","installer":"go","language":"go","metadata":{"CVE-2020-8945":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"5.1","confidentialityImpact":"PARTIAL","exploitabilityScore":"4.9","impactScore":"6.4","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"True","vectorString":"AV:N/AC:H/Au:N/C:P/I:P/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"7.5","baseSeverity":"HIGH","confidentialityImpact":"HIGH","exploitabilityScore":"1.6","impactScore":"5.9","integrityImpact":"HIGH","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H"},"cwe_ids":["CWE-416"],"lastModifiedDate":"2022-10-18T17:59Z","publishedDate":"2020-02-12T18:15Z","references":["https://github.com/proglottis/gpgme/pull/23","https://bugzilla.redhat.com/show_bug.cgi?id=1795838","https://github.com/proglottis/gpgme/compare/v0.1.0...v0.1.1","https://github.com/containers/image/commit/4c7a23f82ef09127b0ff28366d1cf31316dd6cc1","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/H6P6SSNKN4H6GSEVROHBDXA64PX7EOED/","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KDBT77KV3U7BESJX3P4S4MPVDGRTAQA2/","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WXV7NZELYWRRCXATXU3FYD3G3WJT3WYM/","https://access.redhat.com/errata/RHSA-2020:0679","https://access.redhat.com/errata/RHSA-2020:0689","https://access.redhat.com/errata/RHSA-2020:0697","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3SOCLOPTSYABTE4CLTSPDIFE6ZZZR4LX/"]}},"modified":"2023-02-14T00:12:15Z","niah_id":"NIAH-go-github.com/proglottis/gpgme-GHSA-m6wg-2mwg-4rfq","nvd_published_at":"2020-02-12T18:15:00Z","package":"github.com/proglottis/gpgme","published":"2021-05-18T15:29:42Z","purl":"","refeid":"GHSA-m6wg-2mwg-4rfq","references":[],"severity":"HIGH","summary":"GPGME Go wrapper contains Use After Free","vendor":"","versions":["[0:0.1.1]"]},{"cves":["CVE-2015-5250"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L","cwes_id":["CWE-20"],"description":"The API server in OpenShift Origin 1.0.5 allows remote attackers to cause a denial of service (master process crash) via crafted JSON data","github_reviewed":true,"github_reviewed_at":"2021-05-19T22:21:13Z","installer":"go","language":"go","metadata":{"CVE-2015-5250":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"SINGLE","availabilityImpact":"PARTIAL","baseScore":"4.0","confidentialityImpact":"NONE","exploitabilityScore":"8.0","impactScore":"2.9","integrityImpact":"NONE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:S/C:N/I:N/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"","availabilityImpact":"","baseScore":"","baseSeverity":"","confidentialityImpact":"","exploitabilityScore":"","impactScore":"","integrityImpact":"","privilegesRequired":"","scope":"","userInteraction":"","vectorString":""},"cwe_ids":["CWE-20"],"lastModifiedDate":"2023-02-13T00:52Z","publishedDate":"2015-09-08T15:59Z","references":["https://github.com/openshift/origin/issues/4374","https://access.redhat.com/errata/RHSA-2015:1736","https://bugzilla.redhat.com/show_bug.cgi?id=1259867"]}},"modified":"2023-02-13T18:18:48Z","niah_id":"NIAH-go-github.com/openshift/origin-GHSA-rf3m-mhv7-x39f","nvd_published_at":"2015-09-08T15:59:00Z","package":"github.com/openshift/origin","published":"2021-12-20T16:58:22Z","purl":"","refeid":"GHSA-rf3m-mhv7-x39f","references":[],"severity":"MODERATE","summary":"Denial of Service in OpenShift Origin","vendor":"","versions":["[0:1.0.6]"]},{"cves":["CVE-2020-7668","GHSA-88jf-7rch-32qc"],"cvssv2":"","cvssv3":"","cwes_id":[],"description":"Due to improper path santization, archives containing relative file paths can cause files to be written (or overwritten) outside of the target directory.","github_reviewed":"","github_reviewed_at":"","installer":"go","language":"go","metadata":{"CVE-2020-7668":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"NONE","baseScore":"5.0","confidentialityImpact":"NONE","exploitabilityScore":"10.0","impactScore":"2.9","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:N/C:N/I:P/A:N"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":"7.5","baseSeverity":"HIGH","confidentialityImpact":"NONE","exploitabilityScore":"3.9","impactScore":"3.6","integrityImpact":"HIGH","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"},"cwe_ids":["CWE-22"],"lastModifiedDate":"2022-01-01T17:34Z","publishedDate":"2020-06-23T19:38Z","references":["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUNKNWONCAETZ-570384"]}},"modified":"2022-11-21T19:50:45Z","niah_id":"NIAH-go-github.com/unknwon/cae-GO-2020-0041","nvd_published_at":"","package":"github.com/unknwon/cae","published":"2021-04-14T20:04:52Z","purl":"pkg:golang/github.com/unknwon/cae","refeid":"GO-2020-0041","references":[],"severity":"","summary":"","vendor":"","versions":["[0:1.0.1]"]},{"cves":["CVE-2022-39272"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:L","cwes_id":["CWE-20"],"description":"Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux\u2019s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields `.spec.interval` or `.spec.timeout` (and structured variations of these fields), causing the entire object type to stop being processed.\n\nThe issue has two root causes: a) the Kubernetes type `metav1.Duration` not being fully compatible with the Go type `time.Duration` as explained on [upstream report](https://github.com/kubernetes/apimachinery/issues/131); b) lack of validation within Flux to restrict allowed values.\n\n### Workarounds\n\nAdmission controllers can be employed to restrict the values that can be used for fields `.spec.interval` and `.spec.timeout`, however upgrading to the latest versions is still the recommended mitigation.\n\n### Credits\n\nThis issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as [recommended](https://fluxcd.io/security/#report-a-vulnerability)).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in any of the affected repositories.\n- Contact us at the CNCF Flux channel.\n\n### References\n\n- https://github.com/kubernetes/apimachinery/issues/131\n\n","github_reviewed":true,"github_reviewed_at":"2022-10-19T18:40:02Z","installer":"go","language":"go","metadata":{"CVE-2022-39272":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"LOW","baseScore":"4.3","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":"4.3","baseSeverity":"MEDIUM","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cwe_ids":["CWE-20"],"lastModifiedDate":"2022-10-24T16:51Z","publishedDate":"2022-10-22T00:15Z","references":["https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v","https://github.com/kubernetes/apimachinery/issues/131"]}},"modified":"2023-02-14T21:24:24Z","niah_id":"NIAH-go-github.com/fluxcd/flux2-GHSA-f4p5-x4vc-mh4v","nvd_published_at":"2022-10-22T00:15:00Z","package":"github.com/fluxcd/flux2","published":"2022-10-19T18:40:02Z","purl":"","refeid":"GHSA-f4p5-x4vc-mh4v","references":[],"severity":"MODERATE","summary":"Improper use of metav1.Duration allows for Denial of Service","vendor":"","versions":["[0.1.0:0.35.0]"]},{"cves":["CVE-2022-39272"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:L","cwes_id":["CWE-20"],"description":"Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux\u2019s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields `.spec.interval` or `.spec.timeout` (and structured variations of these fields), causing the entire object type to stop being processed.\n\nThe issue has two root causes: a) the Kubernetes type `metav1.Duration` not being fully compatible with the Go type `time.Duration` as explained on [upstream report](https://github.com/kubernetes/apimachinery/issues/131); b) lack of validation within Flux to restrict allowed values.\n\n### Workarounds\n\nAdmission controllers can be employed to restrict the values that can be used for fields `.spec.interval` and `.spec.timeout`, however upgrading to the latest versions is still the recommended mitigation.\n\n### Credits\n\nThis issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as [recommended](https://fluxcd.io/security/#report-a-vulnerability)).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in any of the affected repositories.\n- Contact us at the CNCF Flux channel.\n\n### References\n\n- https://github.com/kubernetes/apimachinery/issues/131\n\n","github_reviewed":true,"github_reviewed_at":"2022-10-19T18:40:02Z","installer":"go","language":"go","metadata":{"CVE-2022-39272":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"LOW","baseScore":"4.3","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":"4.3","baseSeverity":"MEDIUM","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cwe_ids":["CWE-20"],"lastModifiedDate":"2022-10-24T16:51Z","publishedDate":"2022-10-22T00:15Z","references":["https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v","https://github.com/kubernetes/apimachinery/issues/131"]}},"modified":"2023-02-14T21:24:24Z","niah_id":"NIAH-go-github.com/fluxcd/source-controller-GHSA-f4p5-x4vc-mh4v","nvd_published_at":"2022-10-22T00:15:00Z","package":"github.com/fluxcd/source-controller","published":"2022-10-19T18:40:02Z","purl":"","refeid":"GHSA-f4p5-x4vc-mh4v","references":[],"severity":"MODERATE","summary":"Improper use of metav1.Duration allows for Denial of Service","vendor":"","versions":["[0.0.1-alpha-1:0.30.0]"]},{"cves":["CVE-2022-39272"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:L","cwes_id":["CWE-20"],"description":"Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux\u2019s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields `.spec.interval` or `.spec.timeout` (and structured variations of these fields), causing the entire object type to stop being processed.\n\nThe issue has two root causes: a) the Kubernetes type `metav1.Duration` not being fully compatible with the Go type `time.Duration` as explained on [upstream report](https://github.com/kubernetes/apimachinery/issues/131); b) lack of validation within Flux to restrict allowed values.\n\n### Workarounds\n\nAdmission controllers can be employed to restrict the values that can be used for fields `.spec.interval` and `.spec.timeout`, however upgrading to the latest versions is still the recommended mitigation.\n\n### Credits\n\nThis issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as [recommended](https://fluxcd.io/security/#report-a-vulnerability)).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in any of the affected repositories.\n- Contact us at the CNCF Flux channel.\n\n### References\n\n- https://github.com/kubernetes/apimachinery/issues/131\n\n","github_reviewed":true,"github_reviewed_at":"2022-10-19T18:40:02Z","installer":"go","language":"go","metadata":{"CVE-2022-39272":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"LOW","baseScore":"4.3","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":"4.3","baseSeverity":"MEDIUM","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cwe_ids":["CWE-20"],"lastModifiedDate":"2022-10-24T16:51Z","publishedDate":"2022-10-22T00:15Z","references":["https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v","https://github.com/kubernetes/apimachinery/issues/131"]}},"modified":"2023-02-14T21:24:24Z","niah_id":"NIAH-go-github.com/fluxcd/kustomize-controller-GHSA-f4p5-x4vc-mh4v","nvd_published_at":"2022-10-22T00:15:00Z","package":"github.com/fluxcd/kustomize-controller","published":"2022-10-19T18:40:02Z","purl":"","refeid":"GHSA-f4p5-x4vc-mh4v","references":[],"severity":"MODERATE","summary":"Improper use of metav1.Duration allows for Denial of Service","vendor":"","versions":["[0.0.1-alpha-1:0.29.0]"]},{"cves":["CVE-2022-39272"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:L","cwes_id":["CWE-20"],"description":"Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux\u2019s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields `.spec.interval` or `.spec.timeout` (and structured variations of these fields), causing the entire object type to stop being processed.\n\nThe issue has two root causes: a) the Kubernetes type `metav1.Duration` not being fully compatible with the Go type `time.Duration` as explained on [upstream report](https://github.com/kubernetes/apimachinery/issues/131); b) lack of validation within Flux to restrict allowed values.\n\n### Workarounds\n\nAdmission controllers can be employed to restrict the values that can be used for fields `.spec.interval` and `.spec.timeout`, however upgrading to the latest versions is still the recommended mitigation.\n\n### Credits\n\nThis issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as [recommended](https://fluxcd.io/security/#report-a-vulnerability)).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in any of the affected repositories.\n- Contact us at the CNCF Flux channel.\n\n### References\n\n- https://github.com/kubernetes/apimachinery/issues/131\n\n","github_reviewed":true,"github_reviewed_at":"2022-10-19T18:40:02Z","installer":"go","language":"go","metadata":{"CVE-2022-39272":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"LOW","baseScore":"4.3","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":"4.3","baseSeverity":"MEDIUM","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cwe_ids":["CWE-20"],"lastModifiedDate":"2022-10-24T16:51Z","publishedDate":"2022-10-22T00:15Z","references":["https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v","https://github.com/kubernetes/apimachinery/issues/131"]}},"modified":"2023-02-14T21:24:24Z","niah_id":"NIAH-go-github.com/fluxcd/helm-controller-GHSA-f4p5-x4vc-mh4v","nvd_published_at":"2022-10-22T00:15:00Z","package":"github.com/fluxcd/helm-controller","published":"2022-10-19T18:40:02Z","purl":"","refeid":"GHSA-f4p5-x4vc-mh4v","references":[],"severity":"MODERATE","summary":"Improper use of metav1.Duration allows for Denial of Service","vendor":"","versions":["[0.0.1-alpha-1:0.24.0]"]},{"cves":["CVE-2022-39272"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:L","cwes_id":["CWE-20"],"description":"Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux\u2019s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields `.spec.interval` or `.spec.timeout` (and structured variations of these fields), causing the entire object type to stop being processed.\n\nThe issue has two root causes: a) the Kubernetes type `metav1.Duration` not being fully compatible with the Go type `time.Duration` as explained on [upstream report](https://github.com/kubernetes/apimachinery/issues/131); b) lack of validation within Flux to restrict allowed values.\n\n### Workarounds\n\nAdmission controllers can be employed to restrict the values that can be used for fields `.spec.interval` and `.spec.timeout`, however upgrading to the latest versions is still the recommended mitigation.\n\n### Credits\n\nThis issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as [recommended](https://fluxcd.io/security/#report-a-vulnerability)).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in any of the affected repositories.\n- Contact us at the CNCF Flux channel.\n\n### References\n\n- https://github.com/kubernetes/apimachinery/issues/131\n\n","github_reviewed":true,"github_reviewed_at":"2022-10-19T18:40:02Z","installer":"go","language":"go","metadata":{"CVE-2022-39272":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"LOW","baseScore":"4.3","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":"4.3","baseSeverity":"MEDIUM","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cwe_ids":["CWE-20"],"lastModifiedDate":"2022-10-24T16:51Z","publishedDate":"2022-10-22T00:15Z","references":["https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v","https://github.com/kubernetes/apimachinery/issues/131"]}},"modified":"2023-02-14T21:24:24Z","niah_id":"NIAH-go-github.com/fluxcd/notification-controller-GHSA-f4p5-x4vc-mh4v","nvd_published_at":"2022-10-22T00:15:00Z","package":"github.com/fluxcd/notification-controller","published":"2022-10-19T18:40:02Z","purl":"","refeid":"GHSA-f4p5-x4vc-mh4v","references":[],"severity":"MODERATE","summary":"Improper use of metav1.Duration allows for Denial of Service","vendor":"","versions":["[0.0.1-alpha-1:0.27.0]"]},{"cves":["CVE-2022-39272"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:L","cwes_id":["CWE-20"],"description":"Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux\u2019s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields `.spec.interval` or `.spec.timeout` (and structured variations of these fields), causing the entire object type to stop being processed.\n\nThe issue has two root causes: a) the Kubernetes type `metav1.Duration` not being fully compatible with the Go type `time.Duration` as explained on [upstream report](https://github.com/kubernetes/apimachinery/issues/131); b) lack of validation within Flux to restrict allowed values.\n\n### Workarounds\n\nAdmission controllers can be employed to restrict the values that can be used for fields `.spec.interval` and `.spec.timeout`, however upgrading to the latest versions is still the recommended mitigation.\n\n### Credits\n\nThis issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as [recommended](https://fluxcd.io/security/#report-a-vulnerability)).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in any of the affected repositories.\n- Contact us at the CNCF Flux channel.\n\n### References\n\n- https://github.com/kubernetes/apimachinery/issues/131\n\n","github_reviewed":true,"github_reviewed_at":"2022-10-19T18:40:02Z","installer":"go","language":"go","metadata":{"CVE-2022-39272":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"LOW","baseScore":"4.3","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":"4.3","baseSeverity":"MEDIUM","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cwe_ids":["CWE-20"],"lastModifiedDate":"2022-10-24T16:51Z","publishedDate":"2022-10-22T00:15Z","references":["https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v","https://github.com/kubernetes/apimachinery/issues/131"]}},"modified":"2023-02-14T21:24:24Z","niah_id":"NIAH-go-github.com/fluxcd/image-automation-controller-GHSA-f4p5-x4vc-mh4v","nvd_published_at":"2022-10-22T00:15:00Z","package":"github.com/fluxcd/image-automation-controller","published":"2022-10-19T18:40:02Z","purl":"","refeid":"GHSA-f4p5-x4vc-mh4v","references":[],"severity":"MODERATE","summary":"Improper use of metav1.Duration allows for Denial of Service","vendor":"","versions":["[0.1.0:0.26.0]"]},{"cves":["CVE-2022-39272"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:L","cwes_id":["CWE-20"],"description":"Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux\u2019s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields `.spec.interval` or `.spec.timeout` (and structured variations of these fields), causing the entire object type to stop being processed.\n\nThe issue has two root causes: a) the Kubernetes type `metav1.Duration` not being fully compatible with the Go type `time.Duration` as explained on [upstream report](https://github.com/kubernetes/apimachinery/issues/131); b) lack of validation within Flux to restrict allowed values.\n\n### Workarounds\n\nAdmission controllers can be employed to restrict the values that can be used for fields `.spec.interval` and `.spec.timeout`, however upgrading to the latest versions is still the recommended mitigation.\n\n### Credits\n\nThis issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as [recommended](https://fluxcd.io/security/#report-a-vulnerability)).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in any of the affected repositories.\n- Contact us at the CNCF Flux channel.\n\n### References\n\n- https://github.com/kubernetes/apimachinery/issues/131\n\n","github_reviewed":true,"github_reviewed_at":"2022-10-19T18:40:02Z","installer":"go","language":"go","metadata":{"CVE-2022-39272":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"LOW","baseScore":"4.3","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":"4.3","baseSeverity":"MEDIUM","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"1.4","integrityImpact":"NONE","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"},"cwe_ids":["CWE-20"],"lastModifiedDate":"2022-10-24T16:51Z","publishedDate":"2022-10-22T00:15Z","references":["https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v","https://github.com/kubernetes/apimachinery/issues/131"]}},"modified":"2023-02-14T21:24:24Z","niah_id":"NIAH-go-github.com/fluxcd/image-reflector-controller-GHSA-f4p5-x4vc-mh4v","nvd_published_at":"2022-10-22T00:15:00Z","package":"github.com/fluxcd/image-reflector-controller","published":"2022-10-19T18:40:02Z","purl":"","refeid":"GHSA-f4p5-x4vc-mh4v","references":[],"severity":"MODERATE","summary":"Improper use of metav1.Duration allows for Denial of Service","vendor":"","versions":["[0.1.0:0.22.0]"]},{"cves":[],"cvssv2":"","cvssv3":"","cwes_id":["CWE-22"],"description":"### Impact\n\nIn the case that a malicious TAL file is parsed pointing to a repository that provides a malicious ROA file which octorpki downloads, it is possible to bypass the current directory traversal mitigation to allow writing outside of the current directory. \n\n### Patches\n\nNo patch release has been made","github_reviewed":true,"github_reviewed_at":"2022-02-14T22:52:15Z","installer":"go","language":"go","metadata":{},"modified":"2022-02-14T22:52:15Z","niah_id":"NIAH-go-github.com/cloudflare/cfrpki/cmd/octorpki-GHSA-8459-6rc9-8vf8","nvd_published_at":null,"package":"github.com/cloudflare/cfrpki/cmd/octorpki","published":"2022-02-14T22:52:15Z","purl":"","refeid":"GHSA-8459-6rc9-8vf8","references":[],"severity":"LOW","summary":"Path traversal in github.com/cloudflare/cfrpki/cmd/octorpki","vendor":"","versions":[]},{"cves":["CVE-2023-1535"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N","cwes_id":["CWE-79"],"description":"Cross-site Scripting (XSS) - Stored in GitHub repository answerdev/answer prior to 1.0.7.","github_reviewed":true,"github_reviewed_at":"2023-03-21T22:31:54Z","installer":"go","language":"go","metadata":{"CVE-2023-1535":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"NONE","baseScore":"5.4","confidentialityImpact":"LOW","exploitabilityScore":"2.3","impactScore":"2.7","integrityImpact":"LOW","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":"5.4","baseSeverity":"MEDIUM","confidentialityImpact":"LOW","exploitabilityScore":"2.3","impactScore":"2.7","integrityImpact":"LOW","privilegesRequired":"LOW","scope":"CHANGED","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"},"cwe_ids":["CWE-79"],"lastModifiedDate":"2023-03-23T15:48Z","publishedDate":"2023-03-21T05:15Z","references":["https://huntr.dev/bounties/4d4b0caa-6d8c-4574-ae7e-e9ef5e2e1a40","https://github.com/answerdev/answer/commit/c3743bad4f2a69f69f8f1e1e5b4b6524fc03da25"]}},"modified":"2023-03-23T19:11:03Z","niah_id":"NIAH-go-github.com/answerdev/answer-GHSA-83qr-c7m9-wmgw","nvd_published_at":"2023-03-21T05:15:00Z","package":"github.com/answerdev/answer","published":"2023-03-21T06:30:17Z","purl":"","refeid":"GHSA-83qr-c7m9-wmgw","references":[],"severity":"MODERATE","summary":"Answer vulnerable to Stored Cross-site Scripting","vendor":"","versions":["[0:1.0.7]"]},{"cves":["CVE-2023-27484"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:C/C:N/I:N/A:H","cwes_id":["CWE-20","CWE-400"],"description":"### Summary\n\nFuzz testing, by Ada Logics and sponsored by the CNCF, identified a [vulnerability](https://github.com/crossplane/crossplane-runtime/security/advisories/GHSA-vfvj-3m3g-m532) in the `fieldpath` package from `crossplane/crossplane-runtime` that an already highly privileged Crossplane user able to create or update Compositions could leverage to cause an out of memory panic in Crossplane.\n\n### Details\n\nCompositions allow users to specify patches inserting elements into arrays at an arbitrary index. When a Composition is selected for a Composite Resource, patches are evaluated and if a specified index is greater than the current size of the target slice, that slice's size will be increased to the specified index, which could lead to an excessive amount of memory usage and therefore the Pod being OOM-Killed. The index is already capped to the maximum value for a uint32 (4294967295) when parsed, but that is still an unnecessarily large value.\n\n### Workaround\n\nUsers can restrict write privileges on Compositions to only admin users as a workaround.","github_reviewed":true,"github_reviewed_at":"2023-03-10T23:47:53Z","installer":"go","language":"go","metadata":{"CVE-2023-27484":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"HIGH","baseScore":"4.9","confidentialityImpact":"NONE","exploitabilityScore":"1.2","impactScore":"3.6","integrityImpact":"NONE","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"4.9","baseSeverity":"MEDIUM","confidentialityImpact":"NONE","exploitabilityScore":"1.2","impactScore":"3.6","integrityImpact":"NONE","privilegesRequired":"HIGH","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"},"cwe_ids":["CWE-400"],"lastModifiedDate":"2023-03-17T15:03Z","publishedDate":"2023-03-09T21:15Z","references":["https://github.com/crossplane/crossplane/security/advisories/GHSA-v829-x6hh-cqfq"]}},"modified":"2023-03-10T23:47:53Z","niah_id":"NIAH-go-github.com/crossplane/crossplane-GHSA-v829-x6hh-cqfq","nvd_published_at":"2023-03-09T21:15:00Z","package":"github.com/crossplane/crossplane","published":"2023-03-10T23:47:53Z","purl":"","refeid":"GHSA-v829-x6hh-cqfq","references":[],"severity":"MODERATE","summary":"Crossplane-runtime contains Improper Input Validation via Compositions","vendor":"","versions":["[0:1.9.2]"]},{"cves":["CVE-2023-27484"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:C/C:N/I:N/A:H","cwes_id":["CWE-20","CWE-400"],"description":"### Summary\n\nFuzz testing, by Ada Logics and sponsored by the CNCF, identified a [vulnerability](https://github.com/crossplane/crossplane-runtime/security/advisories/GHSA-vfvj-3m3g-m532) in the `fieldpath` package from `crossplane/crossplane-runtime` that an already highly privileged Crossplane user able to create or update Compositions could leverage to cause an out of memory panic in Crossplane.\n\n### Details\n\nCompositions allow users to specify patches inserting elements into arrays at an arbitrary index. When a Composition is selected for a Composite Resource, patches are evaluated and if a specified index is greater than the current size of the target slice, that slice's size will be increased to the specified index, which could lead to an excessive amount of memory usage and therefore the Pod being OOM-Killed. The index is already capped to the maximum value for a uint32 (4294967295) when parsed, but that is still an unnecessarily large value.\n\n### Workaround\n\nUsers can restrict write privileges on Compositions to only admin users as a workaround.","github_reviewed":true,"github_reviewed_at":"2023-03-10T23:47:53Z","installer":"go","language":"go","metadata":{"CVE-2023-27484":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"HIGH","baseScore":"4.9","confidentialityImpact":"NONE","exploitabilityScore":"1.2","impactScore":"3.6","integrityImpact":"NONE","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"4.9","baseSeverity":"MEDIUM","confidentialityImpact":"NONE","exploitabilityScore":"1.2","impactScore":"3.6","integrityImpact":"NONE","privilegesRequired":"HIGH","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"},"cwe_ids":["CWE-400"],"lastModifiedDate":"2023-03-17T15:03Z","publishedDate":"2023-03-09T21:15Z","references":["https://github.com/crossplane/crossplane/security/advisories/GHSA-v829-x6hh-cqfq"]}},"modified":"2023-03-10T23:47:53Z","niah_id":"NIAH-go-github.com/crossplane/crossplane-GHSA-v829-x6hh-cqfq","nvd_published_at":"2023-03-09T21:15:00Z","package":"github.com/crossplane/crossplane","published":"2023-03-10T23:47:53Z","purl":"","refeid":"GHSA-v829-x6hh-cqfq","references":[],"severity":"MODERATE","summary":"Crossplane-runtime contains Improper Input Validation via Compositions","vendor":"","versions":["[1.10.0:1.10.3]"]},{"cves":["CVE-2023-27484"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:C/C:N/I:N/A:H","cwes_id":["CWE-20","CWE-400"],"description":"### Summary\n\nFuzz testing, by Ada Logics and sponsored by the CNCF, identified a [vulnerability](https://github.com/crossplane/crossplane-runtime/security/advisories/GHSA-vfvj-3m3g-m532) in the `fieldpath` package from `crossplane/crossplane-runtime` that an already highly privileged Crossplane user able to create or update Compositions could leverage to cause an out of memory panic in Crossplane.\n\n### Details\n\nCompositions allow users to specify patches inserting elements into arrays at an arbitrary index. When a Composition is selected for a Composite Resource, patches are evaluated and if a specified index is greater than the current size of the target slice, that slice's size will be increased to the specified index, which could lead to an excessive amount of memory usage and therefore the Pod being OOM-Killed. The index is already capped to the maximum value for a uint32 (4294967295) when parsed, but that is still an unnecessarily large value.\n\n### Workaround\n\nUsers can restrict write privileges on Compositions to only admin users as a workaround.","github_reviewed":true,"github_reviewed_at":"2023-03-10T23:47:53Z","installer":"go","language":"go","metadata":{"CVE-2023-27484":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"HIGH","baseScore":"4.9","confidentialityImpact":"NONE","exploitabilityScore":"1.2","impactScore":"3.6","integrityImpact":"NONE","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"4.9","baseSeverity":"MEDIUM","confidentialityImpact":"NONE","exploitabilityScore":"1.2","impactScore":"3.6","integrityImpact":"NONE","privilegesRequired":"HIGH","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"},"cwe_ids":["CWE-400"],"lastModifiedDate":"2023-03-17T15:03Z","publishedDate":"2023-03-09T21:15Z","references":["https://github.com/crossplane/crossplane/security/advisories/GHSA-v829-x6hh-cqfq"]}},"modified":"2023-03-10T23:47:53Z","niah_id":"NIAH-go-github.com/crossplane/crossplane-GHSA-v829-x6hh-cqfq","nvd_published_at":"2023-03-09T21:15:00Z","package":"github.com/crossplane/crossplane","published":"2023-03-10T23:47:53Z","purl":"","refeid":"GHSA-v829-x6hh-cqfq","references":[],"severity":"MODERATE","summary":"Crossplane-runtime contains Improper Input Validation via Compositions","vendor":"","versions":["[1.11.0:1.11.2]"]},{"cves":["CVE-2023-25168"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:H","cwes_id":["CWE-59"],"description":"### Impact\n\nThis vulnerability impacts anyone running the affected versions of Wings.  The vulnerability can be used to delete files and directories recursively on the host system.  This vulnerability can be combined with [`GHSA-p8r3-83r8-jwj5`](https://github.com/pterodactyl/wings/security/advisories/GHSA-p8r3-83r8-jwj5) to overwrite files on the host system.\n\nIn order to use this exploit, an attacker must have an existing \"server\" allocated and controlled by Wings.  Information on how the exploitation of this vulnerability works will be released on February 24th, 2023 in North America.\n\n### Patches\n\nThis vulnerability has been resolved in version `v1.11.4` of Wings, and has been back-ported to the 1.7 release series in `v1.7.4`.\n\nAnyone running `v1.11.x` should upgrade to `v1.11.4` and anyone running `v1.7.x` should upgrade to `v1.7.4`.\n\n### Workarounds\n\nNone at this time.","github_reviewed":true,"github_reviewed_at":"2023-02-10T23:11:01Z","installer":"go","language":"go","metadata":{"CVE-2023-25168":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"HIGH","baseScore":"8.2","confidentialityImpact":"NONE","exploitabilityScore":"1.8","impactScore":"5.8","integrityImpact":"HIGH","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:N/I:H/A:H"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"8.2","baseSeverity":"HIGH","confidentialityImpact":"NONE","exploitabilityScore":"1.8","impactScore":"5.8","integrityImpact":"HIGH","privilegesRequired":"LOW","scope":"CHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:N/I:H/A:H"},"cwe_ids":["CWE-59"],"lastModifiedDate":"2023-02-16T14:51Z","publishedDate":"2023-02-09T00:16Z","references":["https://github.com/pterodactyl/wings/commit/429ac62dba22997a278bc709df5ac00a5a25d83d","https://github.com/pterodactyl/wings/security/advisories/GHSA-p8r3-83r8-jwj5","https://github.com/pterodactyl/wings/security/advisories/GHSA-66p8-j459-rq63"]}},"modified":"2023-02-10T23:11:01Z","niah_id":"NIAH-go-github.com/pterodactyl/wings-GHSA-66p8-j459-rq63","nvd_published_at":"2023-02-09T00:16:00Z","package":"github.com/pterodactyl/wings","published":"2023-02-10T23:11:01Z","purl":"","refeid":"GHSA-66p8-j459-rq63","references":[],"severity":"CRITICAL","summary":"Pterodactyl Wings contains UNIX Symbolic Link (Symlink) Following resulting in deletion of files and directories on the host system","vendor":"","versions":["[0:1.7.4]"]},{"cves":["CVE-2023-25168"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:H","cwes_id":["CWE-59"],"description":"### Impact\n\nThis vulnerability impacts anyone running the affected versions of Wings.  The vulnerability can be used to delete files and directories recursively on the host system.  This vulnerability can be combined with [`GHSA-p8r3-83r8-jwj5`](https://github.com/pterodactyl/wings/security/advisories/GHSA-p8r3-83r8-jwj5) to overwrite files on the host system.\n\nIn order to use this exploit, an attacker must have an existing \"server\" allocated and controlled by Wings.  Information on how the exploitation of this vulnerability works will be released on February 24th, 2023 in North America.\n\n### Patches\n\nThis vulnerability has been resolved in version `v1.11.4` of Wings, and has been back-ported to the 1.7 release series in `v1.7.4`.\n\nAnyone running `v1.11.x` should upgrade to `v1.11.4` and anyone running `v1.7.x` should upgrade to `v1.7.4`.\n\n### Workarounds\n\nNone at this time.","github_reviewed":true,"github_reviewed_at":"2023-02-10T23:11:01Z","installer":"go","language":"go","metadata":{"CVE-2023-25168":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"HIGH","baseScore":"8.2","confidentialityImpact":"NONE","exploitabilityScore":"1.8","impactScore":"5.8","integrityImpact":"HIGH","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:N/I:H/A:H"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"8.2","baseSeverity":"HIGH","confidentialityImpact":"NONE","exploitabilityScore":"1.8","impactScore":"5.8","integrityImpact":"HIGH","privilegesRequired":"LOW","scope":"CHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:N/I:H/A:H"},"cwe_ids":["CWE-59"],"lastModifiedDate":"2023-02-16T14:51Z","publishedDate":"2023-02-09T00:16Z","references":["https://github.com/pterodactyl/wings/commit/429ac62dba22997a278bc709df5ac00a5a25d83d","https://github.com/pterodactyl/wings/security/advisories/GHSA-p8r3-83r8-jwj5","https://github.com/pterodactyl/wings/security/advisories/GHSA-66p8-j459-rq63"]}},"modified":"2023-02-10T23:11:01Z","niah_id":"NIAH-go-github.com/pterodactyl/wings-GHSA-66p8-j459-rq63","nvd_published_at":"2023-02-09T00:16:00Z","package":"github.com/pterodactyl/wings","published":"2023-02-10T23:11:01Z","purl":"","refeid":"GHSA-66p8-j459-rq63","references":[],"severity":"CRITICAL","summary":"Pterodactyl Wings contains UNIX Symbolic Link (Symlink) Following resulting in deletion of files and directories on the host system","vendor":"","versions":["[1.11.0:1.11.4]"]},{"cves":["CVE-2020-26892"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H","cwes_id":["CWE-798"],"description":"\n## Problem Description\n\nNATS nats-server through 2020-10-07 has Incorrect Access Control because of how expired credentials are handled.\n\nThe NATS accounts system has expiration timestamps on credentials; the <https://github.com/nats-io/jwt> library had an API which encouraged misuse and an `IsRevoked()` method which misused its own API.\n\nA new `IsClaimRevoked()` method has correct handling and the nats-server has been updated to use this.  The old `IsRevoked()` method now always returns true and other client code will have to be updated to avoid calling it.\n\nThe CVE identifier should cover any application using the old JWT API, where the nats-server is one of those applications.\n\n\n## Affected versions\n\n#### JWT library\n\n * all versions prior to 1.1.0\n * fixed after nats-io/jwt PR 103 landed (2020-10-06)\n\n#### NATS Server\n\n * Version 2 prior to 2.1.9\n   + 2.0.0 through and including 2.1.8 are vulnerable.\n * fixed with nats-io/nats-server PRs 1632, 1635, 1645\n\n\n## Impact\n\nTime-based credential expiry did not work.\n\n\n## Workaround\n\nHave credentials which only expire after fixes can be deployed.\n\n\n## Solution\n\nUpgrade the JWT dependency in any application using it.\n\nUpgrade the NATS server if using NATS Accounts.","github_reviewed":true,"github_reviewed_at":"2021-05-21T21:18:09Z","installer":"go","language":"go","metadata":{"CVE-2020-26892":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"7.5","confidentialityImpact":"PARTIAL","exploitabilityScore":"10.0","impactScore":"6.4","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"HIGH","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:N/C:P/I:P/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"9.8","baseSeverity":"CRITICAL","confidentialityImpact":"HIGH","exploitabilityScore":"3.9","impactScore":"5.9","integrityImpact":"HIGH","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"},"cwe_ids":["CWE-798"],"lastModifiedDate":"2022-01-01T18:18Z","publishedDate":"2020-11-06T08:15Z","references":["https://www.openwall.com/lists/oss-security/2020/11/02/2","https://github.com/nats-io/nats-server/commits/master","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/"]}},"modified":"2023-02-17T22:46:29Z","niah_id":"NIAH-go-github.com/nats-io/jwt-GHSA-4w5x-x539-ppf5","nvd_published_at":"2020-11-06T08:15:00Z","package":"github.com/nats-io/jwt","published":"2022-02-11T23:42:20Z","purl":"","refeid":"GHSA-4w5x-x539-ppf5","references":[],"severity":"CRITICAL","summary":"Incorrect handling of credential expiry by NATS Server","vendor":"","versions":["[0:1.1.0]"]},{"cves":["CVE-2020-26892"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H","cwes_id":["CWE-798"],"description":"\n## Problem Description\n\nNATS nats-server through 2020-10-07 has Incorrect Access Control because of how expired credentials are handled.\n\nThe NATS accounts system has expiration timestamps on credentials; the <https://github.com/nats-io/jwt> library had an API which encouraged misuse and an `IsRevoked()` method which misused its own API.\n\nA new `IsClaimRevoked()` method has correct handling and the nats-server has been updated to use this.  The old `IsRevoked()` method now always returns true and other client code will have to be updated to avoid calling it.\n\nThe CVE identifier should cover any application using the old JWT API, where the nats-server is one of those applications.\n\n\n## Affected versions\n\n#### JWT library\n\n * all versions prior to 1.1.0\n * fixed after nats-io/jwt PR 103 landed (2020-10-06)\n\n#### NATS Server\n\n * Version 2 prior to 2.1.9\n   + 2.0.0 through and including 2.1.8 are vulnerable.\n * fixed with nats-io/nats-server PRs 1632, 1635, 1645\n\n\n## Impact\n\nTime-based credential expiry did not work.\n\n\n## Workaround\n\nHave credentials which only expire after fixes can be deployed.\n\n\n## Solution\n\nUpgrade the JWT dependency in any application using it.\n\nUpgrade the NATS server if using NATS Accounts.","github_reviewed":true,"github_reviewed_at":"2021-05-21T21:18:09Z","installer":"go","language":"go","metadata":{"CVE-2020-26892":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"7.5","confidentialityImpact":"PARTIAL","exploitabilityScore":"10.0","impactScore":"6.4","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"HIGH","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:N/C:P/I:P/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"9.8","baseSeverity":"CRITICAL","confidentialityImpact":"HIGH","exploitabilityScore":"3.9","impactScore":"5.9","integrityImpact":"HIGH","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"},"cwe_ids":["CWE-798"],"lastModifiedDate":"2022-01-01T18:18Z","publishedDate":"2020-11-06T08:15Z","references":["https://www.openwall.com/lists/oss-security/2020/11/02/2","https://github.com/nats-io/nats-server/commits/master","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI/"]}},"modified":"2023-02-17T22:46:29Z","niah_id":"NIAH-go-github.com/nats-io/nats-server/v2-GHSA-4w5x-x539-ppf5","nvd_published_at":"2020-11-06T08:15:00Z","package":"github.com/nats-io/nats-server/v2","published":"2022-02-11T23:42:20Z","purl":"","refeid":"GHSA-4w5x-x539-ppf5","references":[],"severity":"CRITICAL","summary":"Incorrect handling of credential expiry by NATS Server","vendor":"","versions":["[0:2.1.9]"]},{"cves":["CVE-2021-23772"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H","cwes_id":["CWE-59"],"description":"This affects all versions of package github.com/kataras/iris; all versions of package github.com/kataras/iris/v12. The unsafe handling of file names during upload using UploadFormFiles method may enable attackers to write to arbitrary locations outside the designated target folder.","github_reviewed":true,"github_reviewed_at":"2022-01-05T18:09:47Z","installer":"go","language":"go","metadata":{"CVE-2021-23772":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"6.8","confidentialityImpact":"PARTIAL","exploitabilityScore":"8.6","impactScore":"6.4","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:M/Au:N/C:P/I:P/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"8.8","baseSeverity":"HIGH","confidentialityImpact":"HIGH","exploitabilityScore":"2.8","impactScore":"5.9","integrityImpact":"HIGH","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"},"cwe_ids":["CWE-59"],"lastModifiedDate":"2022-01-04T20:11Z","publishedDate":"2021-12-24T12:15Z","references":["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRIS-2325169","https://github.com/kataras/iris/commit/e213dba0d32ff66653e0ef124bc5088817264b08","https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRISV12-2325170"]}},"modified":"2022-01-05T18:09:47Z","niah_id":"NIAH-go-github.com/kataras/iris/v12-GHSA-jcxc-rh6w-wf49","nvd_published_at":"2021-12-24T12:15:00Z","package":"github.com/kataras/iris/v12","published":"2022-01-06T21:36:19Z","purl":"","refeid":"GHSA-jcxc-rh6w-wf49","references":[],"severity":"HIGH","summary":"Link Following in Iris","vendor":"","versions":["[0:12.2.0-alpha8]"]},{"cves":["CVE-2021-23772"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H","cwes_id":["CWE-59"],"description":"This affects all versions of package github.com/kataras/iris; all versions of package github.com/kataras/iris/v12. The unsafe handling of file names during upload using UploadFormFiles method may enable attackers to write to arbitrary locations outside the designated target folder.","github_reviewed":true,"github_reviewed_at":"2022-01-05T18:09:47Z","installer":"go","language":"go","metadata":{"CVE-2021-23772":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"6.8","confidentialityImpact":"PARTIAL","exploitabilityScore":"8.6","impactScore":"6.4","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:M/Au:N/C:P/I:P/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"8.8","baseSeverity":"HIGH","confidentialityImpact":"HIGH","exploitabilityScore":"2.8","impactScore":"5.9","integrityImpact":"HIGH","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"},"cwe_ids":["CWE-59"],"lastModifiedDate":"2022-01-04T20:11Z","publishedDate":"2021-12-24T12:15Z","references":["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRIS-2325169","https://github.com/kataras/iris/commit/e213dba0d32ff66653e0ef124bc5088817264b08","https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRISV12-2325170"]}},"modified":"2022-01-05T18:09:47Z","niah_id":"NIAH-go-github.com/kataras/iris-GHSA-jcxc-rh6w-wf49","nvd_published_at":"2021-12-24T12:15:00Z","package":"github.com/kataras/iris","published":"2022-01-06T21:36:19Z","purl":"","refeid":"GHSA-jcxc-rh6w-wf49","references":[],"severity":"HIGH","summary":"Link Following in Iris","vendor":"","versions":[]},{"cves":["CVE-2020-26283"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:N/I:H/A:N","cwes_id":["CWE-116","CWE-150"],"description":"### Impact\nControl characters are not escaped from console output. This can result in hiding input from the user which could result in the user taking an unknown, malicious action.\n\n### Patches\n<!-- _Has the problem been patched? What versions should users upgrade to?_  -->\n\n- Patched via https://github.com/ipfs/go-ipfs/pull/7831 in v0.8.0\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ipfs](http://github.com/ipfs/go-ipfs)\n* Email us at [security@ipfs.io](mailto:security@ipfs.io)","github_reviewed":true,"github_reviewed_at":"2021-05-21T18:06:39Z","installer":"go","language":"go","metadata":{"CVE-2020-26283":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"SINGLE","availabilityImpact":"PARTIAL","baseScore":"6.5","confidentialityImpact":"PARTIAL","exploitabilityScore":"8.0","impactScore":"6.4","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:S/C:P/I:P/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"8.8","baseSeverity":"HIGH","confidentialityImpact":"HIGH","exploitabilityScore":"2.8","impactScore":"5.9","integrityImpact":"HIGH","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"},"cwe_ids":["CWE-116"],"lastModifiedDate":"2021-03-27T01:45Z","publishedDate":"2021-03-24T21:15Z","references":["https://github.com/ipfs/go-ipfs/security/advisories/GHSA-r4gv-vj59-cccm","https://github.com/ipfs/go-ipfs/commit/fb0a9acd2d8288bd1028c3219a420de62a09683a","https://github.com/ipfs/go-ipfs/pull/7831"]}},"modified":"2021-05-21T18:06:39Z","niah_id":"NIAH-go-github.com/ipfs/go-ipfs-GHSA-r4gv-vj59-cccm","nvd_published_at":null,"package":"github.com/ipfs/go-ipfs","published":"2021-06-23T17:27:27Z","purl":"","refeid":"GHSA-r4gv-vj59-cccm","references":[],"severity":"MODERATE","summary":"Control character injection in console output in github.com/ipfs/go-ipfs ","vendor":"","versions":["[0:0.8.0]"]},{"cves":["CVE-2021-45326"],"cvssv2":"","cvssv3":"","cwes_id":["CWE-352"],"description":"Cross Site Request Forgery (CSRF) vulnerability exists in Gitea before 1.5.2 via API routes.This can be dangerous especially with state altering POST requests.","github_reviewed":true,"github_reviewed_at":"2022-02-14T23:01:01Z","installer":"go","language":"go","metadata":{"CVE-2021-45326":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"6.8","confidentialityImpact":"PARTIAL","exploitabilityScore":"8.6","impactScore":"6.4","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"True","vectorString":"AV:N/AC:M/Au:N/C:P/I:P/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"8.8","baseSeverity":"HIGH","confidentialityImpact":"HIGH","exploitabilityScore":"2.8","impactScore":"5.9","integrityImpact":"HIGH","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"},"cwe_ids":["CWE-352"],"lastModifiedDate":"2022-02-11T17:03Z","publishedDate":"2022-02-08T15:15Z","references":["https://github.com/go-gitea/gitea/pull/4840","https://blog.gitea.io/2018/10/gitea-1.5.2-is-released/","https://github.com/go-gitea/gitea/issues/4838"]}},"modified":"2022-02-14T23:01:01Z","niah_id":"NIAH-go-github.com/go-gitea/gitea-GHSA-4wp3-8q92-mh8w","nvd_published_at":"2022-02-08T15:15:00Z","package":"github.com/go-gitea/gitea","published":"2022-02-09T00:00:29Z","purl":"pkg:golang/github.com/go-gitea/gitea","refeid":"GHSA-4wp3-8q92-mh8w","references":[],"severity":"HIGH","summary":"Cross Site Request Forgery in Gitea","vendor":"","versions":["[0:1.5.2]"]},{"cves":["CVE-2021-44717"],"cvssv2":"","cvssv3":"","cwes_id":[],"description":"When a Go program running on a Unix system is out of file descriptors and calls syscall.ForkExec (including indirectly by using the os/exec package), syscall.ForkExec can close file descriptor 0 as it fails. If this happens (or can be provoked) repeatedly, it can result in misdirected I/O such as writing network traffic intended for one connection to a different connection, or content intended for one file to a different one.\n\nFor users who cannot immediately update to the new release, the bug can be mitigated by raising the per-process file descriptor limit.","github_reviewed":"","github_reviewed_at":"","installer":"go","language":"go","metadata":{"CVE-2021-44717":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"NONE","baseScore":"5.8","confidentialityImpact":"PARTIAL","exploitabilityScore":"8.6","impactScore":"4.9","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:M/Au:N/C:P/I:P/A:N"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":"4.8","baseSeverity":"MEDIUM","confidentialityImpact":"LOW","exploitabilityScore":"2.2","impactScore":"2.5","integrityImpact":"LOW","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"},"cwe_ids":["CWE-668"],"lastModifiedDate":"2023-02-14T12:15Z","publishedDate":"2022-01-01T05:15Z","references":["https://groups.google.com/g/golang-announce/c/hcmEScgc00k","https://lists.debian.org/debian-lts-announce/2022/01/msg00017.html","https://lists.debian.org/debian-lts-announce/2022/01/msg00016.html","https://security.gentoo.org/glsa/202208-02","https://cert-portal.siemens.com/productcert/pdf/ssa-744259.pdf"]}},"modified":"2022-11-21T19:50:45Z","niah_id":"NIAH-go-stdlib-GO-2022-0289","nvd_published_at":"","package":"stdlib","published":"2022-05-18T18:23:23Z","purl":"pkg:golang/stdlib","refeid":"GO-2022-0289","references":[],"severity":"","summary":"","vendor":"","versions":["[1.17.0:1.17.5]"]},{"cves":["CVE-2022-24450"],"cvssv2":"","cvssv3":"","cwes_id":["CWE-863"],"description":"(This advisory is canonically <https://advisories.nats.io/CVE/CVE-2022-24450.txt>)\n\n## Problem Description\n\nNATS nats-server through 2022-02-04 has Incorrect Access Control, with unchecked ability for clients to authorize into any account, because of a coding error in a long-extant experimental feature.\n\nA client crafting the initial protocol-level handshake could, with valid credentials for any account, specify a target account and switch into it immediately.  This includes any other tenant, and includes the System account which controls nats-server core operations.\n\nFor deployments not using multi-tenancy through NATS Accounts, there is still a vulnerability: normal users are able to choose to be in the System account.\n\nAn experimental feature to provide dynamically provisioned sandbox accounts was designed to allow a server administrator to turn on an option to allow clients to dynamically request a brand new account inline at connection time.  This feature went nowhere, but lived on in the code and was used by a number of tests; support was never added to any client libraries or to the documentation.\n\nA bug in handling the feature meant that if someone did in fact have valid account credentials, then they could specify any other existing account and they would be assigned into that account.\n\nRelease 2.7.2 of nats-server removes the feature.\nBecause of the lack of client support and absence from protocol documentation, we feel this is safe operationally as well as the safest fix for the code.\n\n\n## Affected versions\n\n#### NATS Server\n * All 2.x versions up to and including 2.7.1.\n * Fixed with nats-io/nats-server: 2.7.2\n * NATS Server 1.x did not have accounts.\n * Docker image:  nats <https://hub.docker.com/_/nats>\n\n#### NATS Streaming Server\n * All versions embedding affected NATS Server:\n   + Affected: v0.15.0 up to and including v0.24.0\n   + Fixed with nats-io/nats-streaming-server: 0.24.1\n * Docker image:  nats-streaming <https://hub.docker.com/_/nats-streaming>\n\n\n## Impact\n\nExisting users could act in any account, including the System account.\n\n## Workaround\n\nNone.\n\n## Solution\n\nUpgrade the NATS server.","github_reviewed":true,"github_reviewed_at":"2022-02-08T17:23:16Z","installer":"go","language":"go","metadata":{"CVE-2022-24450":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"SINGLE","availabilityImpact":"COMPLETE","baseScore":"9.0","confidentialityImpact":"COMPLETE","exploitabilityScore":"8.0","impactScore":"10.0","integrityImpact":"COMPLETE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"HIGH","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:S/C:C/I:C/A:C"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"8.8","baseSeverity":"HIGH","confidentialityImpact":"HIGH","exploitabilityScore":"2.8","impactScore":"5.9","integrityImpact":"HIGH","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"},"cwe_ids":["CWE-863"],"lastModifiedDate":"2022-02-11T15:59Z","publishedDate":"2022-02-08T02:15Z","references":["https://github.com/nats-io/nats-server/releases/tag/v2.7.2","https://advisories.nats.io/CVE/CVE-2022-24450.txt"]}},"modified":"2022-02-08T17:23:16Z","niah_id":"NIAH-go-github.com/nats-io/nats-server/v2-GHSA-g6w6-r76c-28j7","nvd_published_at":"2022-02-08T02:15:00Z","package":"github.com/nats-io/nats-server/v2","published":"2022-02-08T17:23:16Z","purl":"","refeid":"GHSA-g6w6-r76c-28j7","references":[],"severity":"CRITICAL","summary":"Incorrect Authorization in NATS nats-server","vendor":"","versions":["[2.0.0:2.7.2]"]},{"cves":["CVE-2022-24450"],"cvssv2":"","cvssv3":"","cwes_id":["CWE-863"],"description":"(This advisory is canonically <https://advisories.nats.io/CVE/CVE-2022-24450.txt>)\n\n## Problem Description\n\nNATS nats-server through 2022-02-04 has Incorrect Access Control, with unchecked ability for clients to authorize into any account, because of a coding error in a long-extant experimental feature.\n\nA client crafting the initial protocol-level handshake could, with valid credentials for any account, specify a target account and switch into it immediately.  This includes any other tenant, and includes the System account which controls nats-server core operations.\n\nFor deployments not using multi-tenancy through NATS Accounts, there is still a vulnerability: normal users are able to choose to be in the System account.\n\nAn experimental feature to provide dynamically provisioned sandbox accounts was designed to allow a server administrator to turn on an option to allow clients to dynamically request a brand new account inline at connection time.  This feature went nowhere, but lived on in the code and was used by a number of tests; support was never added to any client libraries or to the documentation.\n\nA bug in handling the feature meant that if someone did in fact have valid account credentials, then they could specify any other existing account and they would be assigned into that account.\n\nRelease 2.7.2 of nats-server removes the feature.\nBecause of the lack of client support and absence from protocol documentation, we feel this is safe operationally as well as the safest fix for the code.\n\n\n## Affected versions\n\n#### NATS Server\n * All 2.x versions up to and including 2.7.1.\n * Fixed with nats-io/nats-server: 2.7.2\n * NATS Server 1.x did not have accounts.\n * Docker image:  nats <https://hub.docker.com/_/nats>\n\n#### NATS Streaming Server\n * All versions embedding affected NATS Server:\n   + Affected: v0.15.0 up to and including v0.24.0\n   + Fixed with nats-io/nats-streaming-server: 0.24.1\n * Docker image:  nats-streaming <https://hub.docker.com/_/nats-streaming>\n\n\n## Impact\n\nExisting users could act in any account, including the System account.\n\n## Workaround\n\nNone.\n\n## Solution\n\nUpgrade the NATS server.","github_reviewed":true,"github_reviewed_at":"2022-02-08T17:23:16Z","installer":"go","language":"go","metadata":{"CVE-2022-24450":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"SINGLE","availabilityImpact":"COMPLETE","baseScore":"9.0","confidentialityImpact":"COMPLETE","exploitabilityScore":"8.0","impactScore":"10.0","integrityImpact":"COMPLETE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"HIGH","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:S/C:C/I:C/A:C"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"8.8","baseSeverity":"HIGH","confidentialityImpact":"HIGH","exploitabilityScore":"2.8","impactScore":"5.9","integrityImpact":"HIGH","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"},"cwe_ids":["CWE-863"],"lastModifiedDate":"2022-02-11T15:59Z","publishedDate":"2022-02-08T02:15Z","references":["https://github.com/nats-io/nats-server/releases/tag/v2.7.2","https://advisories.nats.io/CVE/CVE-2022-24450.txt"]}},"modified":"2022-02-08T17:23:16Z","niah_id":"NIAH-go-github.com/nats-io/nats-streaming-server-GHSA-g6w6-r76c-28j7","nvd_published_at":"2022-02-08T02:15:00Z","package":"github.com/nats-io/nats-streaming-server","published":"2022-02-08T17:23:16Z","purl":"","refeid":"GHSA-g6w6-r76c-28j7","references":[],"severity":"CRITICAL","summary":"Incorrect Authorization in NATS nats-server","vendor":"","versions":["[0.15.0:0.24.1]"]},{"cves":["CVE-2021-33496"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","cwes_id":["CWE-79"],"description":"Dutchcoders transfer.sh before 1.2.4 allows XSS via an inline view.","github_reviewed":true,"github_reviewed_at":"2021-05-28T18:03:43Z","installer":"go","language":"go","metadata":{"CVE-2021-33496":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"NONE","baseScore":"4.3","confidentialityImpact":"NONE","exploitabilityScore":"8.6","impactScore":"2.9","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"True","vectorString":"AV:N/AC:M/Au:N/C:N/I:P/A:N"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":"6.1","baseSeverity":"MEDIUM","confidentialityImpact":"LOW","exploitabilityScore":"2.8","impactScore":"2.7","integrityImpact":"LOW","privilegesRequired":"NONE","scope":"CHANGED","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"},"cwe_ids":["CWE-79"],"lastModifiedDate":"2021-05-27T19:34Z","publishedDate":"2021-05-24T05:15Z","references":["https://vuln.ryotak.me/advisories/43","https://github.com/dutchcoders/transfer.sh/pull/373","https://github.com/dutchcoders/transfer.sh/releases/tag/v1.2.4","https://github.com/dutchcoders/transfer.sh/commit/9df18fdc69de2e71f30d8c1e6bfab2fda2e52eb4"]}},"modified":"2021-05-28T18:03:43Z","niah_id":"NIAH-go-github.com/dutchcoders/transfer.sh-GHSA-w3jx-wv97-67ph","nvd_published_at":"2021-05-24T05:15:00Z","package":"github.com/dutchcoders/transfer.sh","published":"2021-06-29T21:25:27Z","purl":"","refeid":"GHSA-w3jx-wv97-67ph","references":[],"severity":"MODERATE","summary":"Cross-site scripting in Dutchcoders transfer.sh","vendor":"","versions":["[0:1.2.4]"]},{"cves":["CVE-2020-28362"],"cvssv2":"","cvssv3":"","cwes_id":[],"description":"A number of math/big.Int methods can panic when provided large inputs due to a flawed division method.","github_reviewed":"","github_reviewed_at":"","installer":"go","language":"go","metadata":{"CVE-2020-28362":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"5.0","confidentialityImpact":"NONE","exploitabilityScore":"10.0","impactScore":"2.9","integrityImpact":"NONE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:N/C:N/I:N/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"7.5","baseSeverity":"HIGH","confidentialityImpact":"NONE","exploitabilityScore":"3.9","impactScore":"3.6","integrityImpact":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"cwe_ids":["CWE-295"],"lastModifiedDate":"2021-11-30T22:07Z","publishedDate":"2020-11-18T17:15Z","references":["https://lists.apache.org/thread.html/rd02e75766cd333a0df417588460f5e4477060633000bfe94955851fd@%3Cissues.trafficcontrol.apache.org%3E","https://groups.google.com/g/golang-nuts/c/c-ssaaS7RMI","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/F3ZSHGNTJWCWYAKY5OLZS2XQQYHSXSUO/","https://security.netapp.com/advisory/ntap-20201202-0004/","https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2W4COUPL3YVTZ6RTEIT6LPBDJUFF3VSP/","https://www.arista.com/en/support/advisories-notices/security-advisories/12166-security-advisory-62"]}},"modified":"2022-11-21T19:50:45Z","niah_id":"NIAH-go-stdlib-GO-2021-0069","nvd_published_at":"","package":"stdlib","published":"2021-04-14T20:04:52Z","purl":"pkg:golang/stdlib","refeid":"GO-2021-0069","references":[],"severity":"","summary":"","vendor":"","versions":["[1.15.0:1.15.5]"]},{"cves":[],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H","cwes_id":["CWE-668"],"description":"In Cronos nodes running versions before v0.7.0, the contract selfdestruct invocation permanently removes the corresponding bytecode from the internal database storage. However, due to a bug in Ethermint, all contracts that used the identical bytecode (i.e shared the same CodeHash) will also stop working once one contract invokes selfdestruct, even though the other contracts did not invoke the selfdestruct OPCODE. Thanks to the successfully coordinated security vulnerability disclosure, no smart contracts were impacted through the use of this vulnerability. Smart contract states and storage values are not affected by this vulnerability. This problem has been patched in Cronos v0.8.0. The patch has state machine-breaking changes and the required coordinated network upgrade was done on the block height 3982500 on the Cronos mainnet beta network. If a contract is subject to DoS due to this issue, the user can redeploy the same contract, i.e with identical bytecode, so that the original contract's code is recovered.\n","github_reviewed":true,"github_reviewed_at":"2022-08-11T18:08:57Z","installer":"go","language":"go","metadata":{},"modified":"2022-08-11T18:08:57Z","niah_id":"NIAH-go-github.com/crypto-org-chain/cronos-GHSA-gwj5-wp6r-5q9f","nvd_published_at":null,"package":"github.com/crypto-org-chain/cronos","published":"2022-08-11T18:08:57Z","purl":"","refeid":"GHSA-gwj5-wp6r-5q9f","references":[],"severity":"HIGH","summary":"Cronos vulnerable to DoS through unintended Contract Selfdestruct","vendor":"","versions":["[0:0.8.0]"]},{"cves":["CVE-2021-43784","GHSA-v95c-p5hm-xq8f"],"cvssv2":"","cvssv3":"","cwes_id":[],"description":"An attacker with partial control over the bind mount sources of a new container can bypass namespace restrictions.","github_reviewed":"","github_reviewed_at":"","installer":"go","language":"go","metadata":{"CVE-2021-43784":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"SINGLE","availabilityImpact":"PARTIAL","baseScore":"6.0","confidentialityImpact":"PARTIAL","exploitabilityScore":"6.8","impactScore":"6.4","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:M/Au:S/C:P/I:P/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":"5.0","baseSeverity":"MEDIUM","confidentialityImpact":"LOW","exploitabilityScore":"1.6","impactScore":"3.4","integrityImpact":"LOW","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L"},"cwe_ids":["CWE-190"],"lastModifiedDate":"2021-12-08T18:05Z","publishedDate":"2021-12-06T18:15Z","references":["https://github.com/opencontainers/runc/commit/d72d057ba794164c3cce9451a00b72a78b25e1ae","https://github.com/opencontainers/runc/commit/9c444070ec7bb83995dbc0185da68284da71c554","https://github.com/opencontainers/runc/commit/f50369af4b571e358f20b139eea52d612eb55eed","https://github.com/opencontainers/runc/security/advisories/GHSA-v95c-p5hm-xq8f","https://bugs.chromium.org/p/project-zero/issues/detail?id=2241","https://lists.debian.org/debian-lts-announce/2021/12/msg00005.html"]}},"modified":"2022-11-21T19:50:45Z","niah_id":"NIAH-go-github.com/opencontainers/runc-GO-2022-0274","nvd_published_at":"","package":"github.com/opencontainers/runc","published":"2022-07-15T23:08:20Z","purl":"pkg:golang/github.com/opencontainers/runc","refeid":"GO-2022-0274","references":[],"severity":"","summary":"","vendor":"","versions":["[1.0.1-0.20211012131345-9c444070ec7b:1.1.0]"]},{"cves":[],"cvssv2":"","cvssv3":"","cwes_id":[],"description":"### Impact\nProcesses using tableflip may encounter hung goroutines in the parent process, after a failed upgrade.\n\nThe Go runtime has annoying behaviour around setting and clearing\nO_NONBLOCK: exec.Cmd.Start() ends up calling os.File.Fd() for any\nfile in exec.Cmd.ExtraFiles. os.File.Fd() disables both the use\nof the runtime poller for the file and clears O_NONBLOCK from\nthe underlying open file descriptor.\n\nThis can lead to goroutines hanging in a parent process, after at least\none failed upgrade. The bug manifests in goroutines which rely on\neither a deadline or interruption via Close() to be unblocked being stuck\nin read or accept like syscalls. As far as I can tell we've not experienced\nthis problem in production, so it's most likely quite rare.\n\n### Patches\nThe problem has been fixed in v1.2.2.\n\n### Workarounds\nNone.\n\n### References\n* https://github.com/cloudflare/tableflip/commit/cae714b289e199db5da5f08af861ea65be6232c0","github_reviewed":true,"github_reviewed_at":"2021-05-21T14:40:36Z","installer":"go","language":"go","metadata":{},"modified":"2021-05-21T14:40:36Z","niah_id":"NIAH-go-github.com/cloudflare/tableflip-GHSA-gmq2-39ff-f5qg","nvd_published_at":null,"package":"github.com/cloudflare/tableflip","published":"2021-05-21T16:25:48Z","purl":"","refeid":"GHSA-gmq2-39ff-f5qg","references":[],"severity":"LOW","summary":"A failed upgrade may lead to hung goroutines","vendor":"","versions":["[0:1.2.2]"]},{"cves":["CVE-2022-31105"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H","cwes_id":["CWE-295"],"description":"### Impact\n\nAll versions of Argo CD starting with v0.4.0 are vulnerable to an improper certificate validation bug which could cause Argo CD to trust a malicious (or otherwise untrustworthy) OIDC provider.\n\n(Note: external OIDC provider support was added in v0.11.0. Before that version, the notes below apply only to the bundled Dex instance.)\n\nYou are impacted if 1) have SSO enabled and 2) insecure mode is _not_ enabled on the API server. In this case, certificate verification is skipped when connecting to your OIDC provider for the following tasks: verifying auth tokens on API requests and handling SSO login flows. If you are using the bundled Dex instance but have _not_ set the `--dex-server` flag on the API server to an HTTPS address, then certificate verification is not being skipped (because [TLS is not enabled by default for the bundled Dex instance](https://github.com/argoproj/argo-cd/issues/9424)).\n\nArgo CD sends requests to the configured OIDC provider (either the bundled Dex instance or an external provider) to 1) retrieve the [OpenID configuration](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig), 2) to retrieve the OIDC provider's key set (at the location determined by the [OIDC provider's configured `jwks_uri`](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata)), and 3) (during an SSO login) to exchange an authorization code for a token.\n\n(Note: Starting with v2.3.0, certificate verification is _not_ skipped when handling an SSO login flow if 1) you are not using the bundled Dex OIDC provider and 2) you have set `oidc.config.rootCA` in the `argocd-cm` ConfigMap. Certificate verification is still skipped when verifying tokens on API calls.)\n\nSkipping certificate verification when communicating with the OIDC provider opens Argo CD to a variety of risks. For example, if an attacker can successfully intercept, decrypt, and respond to requests bound for the configured OIDC provider (a machine-in-the-middle attack), they could theoretically issue a \"valid\" admin token. Verifying the OIDC provider's certificate provides an extra layer of protection against such an attack.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.4.5\n* v2.3.6\n* v2.2.11\n\n**Note:**\n\nTo preserve backwards compatibility, this patch adds a `oidc.tls.insecure.skip.verify` option to the `argocd-cm` ConfigMap. The default is `\"false\"`. Before resorting to setting this, you should try to get certificate verification to work. If you are using the bundled Dex instance, user your Argo CD API server's [TLS configuration](https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/) since the API server acts as a reverse proxy to Dex. If you are using an external OIDC provider, [set the `rootCA` config](https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#configuring-a-custom-root-ca-certificate-for-communicating-with-the-oidc-provider).\n\nIf these fail, be sure you are aware of the risks before setting `oidc.tls.insecure.skip.verify: \"true\"`.\n\n### Workarounds\n\nThere is no complete workaround besides upgrading.\n\n#### Partial mitigation when using an external OIDC provider\n\nIf you are using an external OIDC provider (not the bundled Dex instance), then you can mitigate the issue by setting the `oidc.config.rootCA` field in the `argocd-cm` ConfigMap. If your OIDC provider's certificate is self-signed or otherwise invalid, you must set the rootCA to a certificate that enables verification. If the OIDC provider's certificate passes _without_ an additional root CA, then you can set `oidc.config.rootCA` to a bogus non-empty string such as `\"force cert verification\"`. The API server will log a warning, but otherwise things should work fine.\n\nExample:\n\n```yaml\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    ...\n    rootCA: |\n      force cert verification\n```\n\nThis mitigation _only_ forces certificate validation when the API server handles login flows. It does not force certificate verification when verifying tokens on API calls. To fully resolve the vulnerability, you must upgrade.\n\n### References\n\n* [Argo CD SSO configuration documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#sso)\n\n### Credits\n\n@jannfis and @crenshaw-dev discovered the vulnerability when reviewing notes from ADA Logics' security audit of the Argo project sponsored by CNCF and facilitated by OSTIF. Thanks to Adam Korczynski and David Korczynski for their work on the audit.\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n","github_reviewed":true,"github_reviewed_at":"2022-07-12T22:05:11Z","installer":"go","language":"go","metadata":{"CVE-2022-31105":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"5.1","confidentialityImpact":"PARTIAL","exploitabilityScore":"4.9","impactScore":"6.4","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"True","vectorString":"AV:N/AC:H/Au:N/C:P/I:P/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"9.6","baseSeverity":"CRITICAL","confidentialityImpact":"HIGH","exploitabilityScore":"2.8","impactScore":"6.0","integrityImpact":"HIGH","privilegesRequired":"NONE","scope":"CHANGED","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H"},"cwe_ids":["CWE-295"],"lastModifiedDate":"2022-07-20T15:45Z","publishedDate":"2022-07-12T22:15Z","references":["https://github.com/argoproj/argo-cd/security/advisories/GHSA-7943-82jg-wmw5","https://github.com/argoproj/argo-cd/releases/tag/v2.3.6","https://github.com/argoproj/argo-cd/releases/tag/v2.4.5"]}},"modified":"2022-07-21T15:54:19Z","niah_id":"NIAH-go-github.com/argoproj/argo-cd-GHSA-7943-82jg-wmw5","nvd_published_at":"2022-07-12T22:15:00Z","package":"github.com/argoproj/argo-cd","published":"2022-07-12T22:05:11Z","purl":"pkg:golang/github.com/argoproj/argo-cd","refeid":"GHSA-7943-82jg-wmw5","references":[],"severity":"HIGH","summary":"Argo CD certificate verification is skipped for connections to OIDC providers","vendor":"","versions":["[0.4.0:2.2.11]"]},{"cves":["CVE-2022-31105"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H","cwes_id":["CWE-295"],"description":"### Impact\n\nAll versions of Argo CD starting with v0.4.0 are vulnerable to an improper certificate validation bug which could cause Argo CD to trust a malicious (or otherwise untrustworthy) OIDC provider.\n\n(Note: external OIDC provider support was added in v0.11.0. Before that version, the notes below apply only to the bundled Dex instance.)\n\nYou are impacted if 1) have SSO enabled and 2) insecure mode is _not_ enabled on the API server. In this case, certificate verification is skipped when connecting to your OIDC provider for the following tasks: verifying auth tokens on API requests and handling SSO login flows. If you are using the bundled Dex instance but have _not_ set the `--dex-server` flag on the API server to an HTTPS address, then certificate verification is not being skipped (because [TLS is not enabled by default for the bundled Dex instance](https://github.com/argoproj/argo-cd/issues/9424)).\n\nArgo CD sends requests to the configured OIDC provider (either the bundled Dex instance or an external provider) to 1) retrieve the [OpenID configuration](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig), 2) to retrieve the OIDC provider's key set (at the location determined by the [OIDC provider's configured `jwks_uri`](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata)), and 3) (during an SSO login) to exchange an authorization code for a token.\n\n(Note: Starting with v2.3.0, certificate verification is _not_ skipped when handling an SSO login flow if 1) you are not using the bundled Dex OIDC provider and 2) you have set `oidc.config.rootCA` in the `argocd-cm` ConfigMap. Certificate verification is still skipped when verifying tokens on API calls.)\n\nSkipping certificate verification when communicating with the OIDC provider opens Argo CD to a variety of risks. For example, if an attacker can successfully intercept, decrypt, and respond to requests bound for the configured OIDC provider (a machine-in-the-middle attack), they could theoretically issue a \"valid\" admin token. Verifying the OIDC provider's certificate provides an extra layer of protection against such an attack.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.4.5\n* v2.3.6\n* v2.2.11\n\n**Note:**\n\nTo preserve backwards compatibility, this patch adds a `oidc.tls.insecure.skip.verify` option to the `argocd-cm` ConfigMap. The default is `\"false\"`. Before resorting to setting this, you should try to get certificate verification to work. If you are using the bundled Dex instance, user your Argo CD API server's [TLS configuration](https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/) since the API server acts as a reverse proxy to Dex. If you are using an external OIDC provider, [set the `rootCA` config](https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#configuring-a-custom-root-ca-certificate-for-communicating-with-the-oidc-provider).\n\nIf these fail, be sure you are aware of the risks before setting `oidc.tls.insecure.skip.verify: \"true\"`.\n\n### Workarounds\n\nThere is no complete workaround besides upgrading.\n\n#### Partial mitigation when using an external OIDC provider\n\nIf you are using an external OIDC provider (not the bundled Dex instance), then you can mitigate the issue by setting the `oidc.config.rootCA` field in the `argocd-cm` ConfigMap. If your OIDC provider's certificate is self-signed or otherwise invalid, you must set the rootCA to a certificate that enables verification. If the OIDC provider's certificate passes _without_ an additional root CA, then you can set `oidc.config.rootCA` to a bogus non-empty string such as `\"force cert verification\"`. The API server will log a warning, but otherwise things should work fine.\n\nExample:\n\n```yaml\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    ...\n    rootCA: |\n      force cert verification\n```\n\nThis mitigation _only_ forces certificate validation when the API server handles login flows. It does not force certificate verification when verifying tokens on API calls. To fully resolve the vulnerability, you must upgrade.\n\n### References\n\n* [Argo CD SSO configuration documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#sso)\n\n### Credits\n\n@jannfis and @crenshaw-dev discovered the vulnerability when reviewing notes from ADA Logics' security audit of the Argo project sponsored by CNCF and facilitated by OSTIF. Thanks to Adam Korczynski and David Korczynski for their work on the audit.\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n","github_reviewed":true,"github_reviewed_at":"2022-07-12T22:05:11Z","installer":"go","language":"go","metadata":{"CVE-2022-31105":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"5.1","confidentialityImpact":"PARTIAL","exploitabilityScore":"4.9","impactScore":"6.4","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"True","vectorString":"AV:N/AC:H/Au:N/C:P/I:P/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"9.6","baseSeverity":"CRITICAL","confidentialityImpact":"HIGH","exploitabilityScore":"2.8","impactScore":"6.0","integrityImpact":"HIGH","privilegesRequired":"NONE","scope":"CHANGED","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H"},"cwe_ids":["CWE-295"],"lastModifiedDate":"2022-07-20T15:45Z","publishedDate":"2022-07-12T22:15Z","references":["https://github.com/argoproj/argo-cd/security/advisories/GHSA-7943-82jg-wmw5","https://github.com/argoproj/argo-cd/releases/tag/v2.3.6","https://github.com/argoproj/argo-cd/releases/tag/v2.4.5"]}},"modified":"2022-07-21T15:54:19Z","niah_id":"NIAH-go-github.com/argoproj/argo-cd-GHSA-7943-82jg-wmw5","nvd_published_at":"2022-07-12T22:15:00Z","package":"github.com/argoproj/argo-cd","published":"2022-07-12T22:05:11Z","purl":"pkg:golang/github.com/argoproj/argo-cd","refeid":"GHSA-7943-82jg-wmw5","references":[],"severity":"HIGH","summary":"Argo CD certificate verification is skipped for connections to OIDC providers","vendor":"","versions":["[2.3.0:2.3.6]"]},{"cves":["CVE-2022-31105"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H","cwes_id":["CWE-295"],"description":"### Impact\n\nAll versions of Argo CD starting with v0.4.0 are vulnerable to an improper certificate validation bug which could cause Argo CD to trust a malicious (or otherwise untrustworthy) OIDC provider.\n\n(Note: external OIDC provider support was added in v0.11.0. Before that version, the notes below apply only to the bundled Dex instance.)\n\nYou are impacted if 1) have SSO enabled and 2) insecure mode is _not_ enabled on the API server. In this case, certificate verification is skipped when connecting to your OIDC provider for the following tasks: verifying auth tokens on API requests and handling SSO login flows. If you are using the bundled Dex instance but have _not_ set the `--dex-server` flag on the API server to an HTTPS address, then certificate verification is not being skipped (because [TLS is not enabled by default for the bundled Dex instance](https://github.com/argoproj/argo-cd/issues/9424)).\n\nArgo CD sends requests to the configured OIDC provider (either the bundled Dex instance or an external provider) to 1) retrieve the [OpenID configuration](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig), 2) to retrieve the OIDC provider's key set (at the location determined by the [OIDC provider's configured `jwks_uri`](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata)), and 3) (during an SSO login) to exchange an authorization code for a token.\n\n(Note: Starting with v2.3.0, certificate verification is _not_ skipped when handling an SSO login flow if 1) you are not using the bundled Dex OIDC provider and 2) you have set `oidc.config.rootCA` in the `argocd-cm` ConfigMap. Certificate verification is still skipped when verifying tokens on API calls.)\n\nSkipping certificate verification when communicating with the OIDC provider opens Argo CD to a variety of risks. For example, if an attacker can successfully intercept, decrypt, and respond to requests bound for the configured OIDC provider (a machine-in-the-middle attack), they could theoretically issue a \"valid\" admin token. Verifying the OIDC provider's certificate provides an extra layer of protection against such an attack.\n\n### Patches\n\nA patch for this vulnerability has been released in the following Argo CD versions:\n\n* v2.4.5\n* v2.3.6\n* v2.2.11\n\n**Note:**\n\nTo preserve backwards compatibility, this patch adds a `oidc.tls.insecure.skip.verify` option to the `argocd-cm` ConfigMap. The default is `\"false\"`. Before resorting to setting this, you should try to get certificate verification to work. If you are using the bundled Dex instance, user your Argo CD API server's [TLS configuration](https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/) since the API server acts as a reverse proxy to Dex. If you are using an external OIDC provider, [set the `rootCA` config](https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#configuring-a-custom-root-ca-certificate-for-communicating-with-the-oidc-provider).\n\nIf these fail, be sure you are aware of the risks before setting `oidc.tls.insecure.skip.verify: \"true\"`.\n\n### Workarounds\n\nThere is no complete workaround besides upgrading.\n\n#### Partial mitigation when using an external OIDC provider\n\nIf you are using an external OIDC provider (not the bundled Dex instance), then you can mitigate the issue by setting the `oidc.config.rootCA` field in the `argocd-cm` ConfigMap. If your OIDC provider's certificate is self-signed or otherwise invalid, you must set the rootCA to a certificate that enables verification. If the OIDC provider's certificate passes _without_ an additional root CA, then you can set `oidc.config.rootCA` to a bogus non-empty string such as `\"force cert verification\"`. The API server will log a warning, but otherwise things should work fine.\n\nExample:\n\n```yaml\nmetadata:\n  name: argocd-cm\ndata:\n  oidc.config: |\n    ...\n    rootCA: |\n      force cert verification\n```\n\nThis mitigation _only_ forces certificate validation when the API server handles login flows. It does not force certificate verification when verifying tokens on API calls. To fully resolve the vulnerability, you must upgrade.\n\n### References\n\n* [Argo CD SSO configuration documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#sso)\n\n### Credits\n\n@jannfis and @crenshaw-dev discovered the vulnerability when reviewing notes from ADA Logics' security audit of the Argo project sponsored by CNCF and facilitated by OSTIF. Thanks to Adam Korczynski and David Korczynski for their work on the audit.\n\n### For more information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues) or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n","github_reviewed":true,"github_reviewed_at":"2022-07-12T22:05:11Z","installer":"go","language":"go","metadata":{"CVE-2022-31105":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"5.1","confidentialityImpact":"PARTIAL","exploitabilityScore":"4.9","impactScore":"6.4","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"True","vectorString":"AV:N/AC:H/Au:N/C:P/I:P/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"9.6","baseSeverity":"CRITICAL","confidentialityImpact":"HIGH","exploitabilityScore":"2.8","impactScore":"6.0","integrityImpact":"HIGH","privilegesRequired":"NONE","scope":"CHANGED","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H"},"cwe_ids":["CWE-295"],"lastModifiedDate":"2022-07-20T15:45Z","publishedDate":"2022-07-12T22:15Z","references":["https://github.com/argoproj/argo-cd/security/advisories/GHSA-7943-82jg-wmw5","https://github.com/argoproj/argo-cd/releases/tag/v2.3.6","https://github.com/argoproj/argo-cd/releases/tag/v2.4.5"]}},"modified":"2022-07-21T15:54:19Z","niah_id":"NIAH-go-github.com/argoproj/argo-cd-GHSA-7943-82jg-wmw5","nvd_published_at":"2022-07-12T22:15:00Z","package":"github.com/argoproj/argo-cd","published":"2022-07-12T22:05:11Z","purl":"pkg:golang/github.com/argoproj/argo-cd","refeid":"GHSA-7943-82jg-wmw5","references":[],"severity":"HIGH","summary":"Argo CD certificate verification is skipped for connections to OIDC providers","vendor":"","versions":["[2.4.0:2.4.5]"]},{"cves":["CVE-2016-3958"],"cvssv2":"","cvssv3":"","cwes_id":[],"description":"Untrusted search path vulnerability on Windows related to LoadLibrary allows local users to gain privileges via a malicious DLL in the current working directory.","github_reviewed":"","github_reviewed_at":"","installer":"go","language":"go","metadata":{"CVE-2016-3958":{"cvssV2":{"accessComplexity":"LOCAL","authentication":"NONE","availabilityImpact":"COMPLETE","baseScore":"7.2","confidentialityImpact":"COMPLETE","exploitabilityScore":"3.9","impactScore":"10.0","integrityImpact":"COMPLETE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"HIGH","userInteractionRequired":"False","vectorString":"AV:L/AC:L/Au:N/C:C/I:C/A:C"},"cvssV3":{"attackComplexity":"","attackVector":"LOCAL","availabilityImpact":"HIGH","baseScore":"7.8","baseSeverity":"HIGH","confidentialityImpact":"HIGH","exploitabilityScore":"1.8","impactScore":"5.9","integrityImpact":"HIGH","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"},"cwe_ids":["CWE-264"],"lastModifiedDate":"2022-08-16T13:18Z","publishedDate":"2016-05-23T19:59Z","references":["https://github.com/golang/go/issues/14959","http://www.openwall.com/lists/oss-security/2016/04/05/2","http://www.openwall.com/lists/oss-security/2016/04/05/1","https://go-review.googlesource.com/#/c/21428/","https://groups.google.com/forum/#!topic/golang-announce/9eqIHqaWvck"]}},"modified":"2022-11-21T19:50:45Z","niah_id":"NIAH-go-stdlib-GO-2021-0163","nvd_published_at":"","package":"stdlib","published":"2022-01-05T22:41:50Z","purl":"pkg:golang/stdlib","refeid":"GO-2021-0163","references":[],"severity":"","summary":"","vendor":"","versions":["[1.6.0:1.6.1]"]},{"cves":["CVE-2021-21271"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H","cwes_id":["CWE-400"],"description":"### Description \n\nTendermint Core v0.34.0 introduced a new way of handling evidence of misbehavior. As part of this, [we added a new `Timestamp` field to `Evidence` structs](https://github.com/tendermint/tendermint/pull/5219). This timestamp would be calculated using the same algorithm that is used when a block is created and proposed. (This algorithm relies on the timestamp of the last commit from this specific block.) \n\nIn Tendermint Core v0.34.0-v0.34.2, the `consensus` reactor is responsible for forming `DuplicateVoteEvidence` whenever double signs are observed. However, the current block is still \u201cin flight\u201d when it is being formed by the `consensus` reactor. It hasn\u2019t been finalized through network consensus yet. This means that different nodes in the network may observe different \u201clast commits\u201d when assigning a timestamp to `DuplicateVoteEvidence.`\n\nIn turn, different nodes could form `DuplicateVoteEvidence` objects at the same height but with different timestamps. One `DuplicateVoteEvidence` object (with one timestamp) will then eventually get finalized in the block, but this means that any `DuplicateVoteEvidence` with a different timestamp is considered invalid. Any node that formed invalid `DuplicateVoteEvidence` will continue to propose invalid evidence; its peers may see this, and choose to disconnect from this node. This bug means that double signs are DoS vectors in Tendermint Core v0.34.0-v0.34.2. \n\nTendermint Core v0.34.3 is a security release which fixes this bug. As of v0.34.3, `DuplicateVoteEvidence` is no longer formed by the `consensus` reactor; rather, the `consensus` reactor passes the `Vote`s themselves into the `EvidencePool`, which is now responsible for forming `DuplicateVoteEvidence`. The `EvidencePool` has timestamp info that should be consistent across the network, which means that `DuplicateVoteEvidence` formed in this reactor should have consistent timestamps. \n\nThis release changes the API between the `consensus` and `evidence` reactors. \n\n### Impact\n\nThis is a denial-of-service vector which impacts networks running Tendermint Core v0.34.0 - v0.34.2.\n\n### Remediation\n\nThis problem has been patched in Tendermint Core v0.34.3. Networks running impacted versions of Tendermint Core should update immediately.\n\n### Workarounds\n\nThere are no workarounds, other than upgrading to a patched version of Tendermint Core.\n\n### Credits \n\n* Crypto.com (@cyril-crypto, @brianatcrypto, @tomtau and  @yihuang) for finding and submitting this vulnerability\n* @melekes and @cmwaters for identifying the root cause and patching the problem \n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [tendermint/tendermint](https://github.com/tendermint/tendermint)\n* Email us at [security@tendermint.com](mailto:security@tendermint.com)","github_reviewed":true,"github_reviewed_at":"2022-10-07T07:23:51Z","installer":"go","language":"go","metadata":{"CVE-2021-21271":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"SINGLE","availabilityImpact":"PARTIAL","baseScore":"4.0","confidentialityImpact":"NONE","exploitabilityScore":"8.0","impactScore":"2.9","integrityImpact":"NONE","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:S/C:N/I:N/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":"6.5","baseSeverity":"MEDIUM","confidentialityImpact":"NONE","exploitabilityScore":"2.8","impactScore":"3.6","integrityImpact":"NONE","privilegesRequired":"LOW","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"},"cwe_ids":["CWE-400"],"lastModifiedDate":"2021-02-08T21:23Z","publishedDate":"2021-01-26T21:15Z","references":["https://github.com/tendermint/tendermint/commit/a2a6852ab99e4a0f9e79f0ea8c1726e262e25c76","https://github.com/tendermint/tendermint/security/advisories/GHSA-p658-8693-mhvg","https://github.com/tendermint/tendermint/blob/v0.34.3/CHANGELOG.md#v0.34.3"]}},"modified":"2023-02-15T19:32:29Z","niah_id":"NIAH-go-github.com/tendermint/tendermint-GHSA-p658-8693-mhvg","nvd_published_at":null,"package":"github.com/tendermint/tendermint","published":"2022-10-07T07:23:51Z","purl":"","refeid":"GHSA-p658-8693-mhvg","references":[],"severity":"MODERATE","summary":"Tendermint Core vulnerable to Uncontrolled Resource Consumption","vendor":"","versions":["[0.34.0:0.34.3]"]},{"cves":["CVE-2015-10004","GHSA-5vw4-v588-pgv8"],"cvssv2":"","cvssv3":"","cwes_id":[],"description":"Token validation methods are susceptible to a timing side-channel during HMAC comparison. With a large enough number of requests over a low latency connection, an attacker may use this to determine the expected HMAC.","github_reviewed":"","github_reviewed_at":"","installer":"go","language":"go","metadata":{"CVE-2015-10004":{"cvssV2":{"accessComplexity":"","authentication":"","availabilityImpact":"NONE","baseScore":"7.5","confidentialityImpact":"HIGH","exploitabilityScore":"3.9","impactScore":"3.6","integrityImpact":"NONE","obtainAllPrivilege":"","obtainOtherPrivilege":"","obtainUserPrivilege":"","severity":"","userInteractionRequired":"","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"},"cvssV3":{"attackComplexity":"","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":"7.5","baseSeverity":"HIGH","confidentialityImpact":"HIGH","exploitabilityScore":"3.9","impactScore":"3.6","integrityImpact":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"},"cwe_ids":["CWE-668"],"lastModifiedDate":"2023-01-06T15:39Z","publishedDate":"2022-12-27T22:15Z","references":["https://github.com/robbert229/jwt/commit/ca1404ee6e83fcbafb66b09ed0d543850a15b654","https://pkg.go.dev/vuln/GO-2020-0023","https://github.com/robbert229/jwt/issues/12"]}},"modified":"2023-01-13T22:40:45Z","niah_id":"NIAH-go-github.com/robbert229/jwt-GO-2020-0023","nvd_published_at":"","package":"github.com/robbert229/jwt","published":"2021-04-14T20:04:52Z","purl":"pkg:golang/github.com/robbert229/jwt","refeid":"GO-2020-0023","references":[],"severity":"","summary":"","vendor":"","versions":["[0:0.0.0-20170426191122-ca1404ee6e83]"]},{"cves":["CVE-2015-5305"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L","cwes_id":["CWE-22"],"description":"Directory traversal vulnerability in Kubernetes, as used in Red Hat OpenShift Enterprise 3.0, allows attackers to write to arbitrary files via a crafted object type name, which is not properly handled before passing it to etcd.","github_reviewed":true,"github_reviewed_at":"2021-05-20T16:19:56Z","installer":"go","language":"go","metadata":{"CVE-2015-5305":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"6.4","confidentialityImpact":"NONE","exploitabilityScore":"10.0","impactScore":"4.9","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:N/C:N/I:P/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"","availabilityImpact":"","baseScore":"","baseSeverity":"","confidentialityImpact":"","exploitabilityScore":"","impactScore":"","integrityImpact":"","privilegesRequired":"","scope":"","userInteraction":"","vectorString":""},"cwe_ids":["CWE-22"],"lastModifiedDate":"2023-02-13T00:53Z","publishedDate":"2015-11-06T18:59Z","references":["https://bugzilla.redhat.com/show_bug.cgi?id=1273969","https://access.redhat.com/errata/RHSA-2015:1945"]}},"modified":"2023-02-03T20:43:23Z","niah_id":"NIAH-go-github.com/kubernetes/kubernetes-GHSA-jp32-vmm6-3vf5","nvd_published_at":"2015-11-06T18:59:00Z","package":"github.com/kubernetes/kubernetes","published":"2022-02-15T01:57:18Z","purl":"","refeid":"GHSA-jp32-vmm6-3vf5","references":[],"severity":"MODERATE","summary":"Directory Traversal in Kubernetes","vendor":"","versions":["[0:1.1.1]"]},{"cves":["CVE-2015-5305"],"cvssv2":"","cvssv3":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L","cwes_id":["CWE-22"],"description":"Directory traversal vulnerability in Kubernetes, as used in Red Hat OpenShift Enterprise 3.0, allows attackers to write to arbitrary files via a crafted object type name, which is not properly handled before passing it to etcd.","github_reviewed":true,"github_reviewed_at":"2021-05-20T16:19:56Z","installer":"go","language":"go","metadata":{"CVE-2015-5305":{"cvssV2":{"accessComplexity":"NETWORK","authentication":"NONE","availabilityImpact":"PARTIAL","baseScore":"6.4","confidentialityImpact":"NONE","exploitabilityScore":"10.0","impactScore":"4.9","integrityImpact":"PARTIAL","obtainAllPrivilege":"False","obtainOtherPrivilege":"False","obtainUserPrivilege":"False","severity":"MEDIUM","userInteractionRequired":"False","vectorString":"AV:N/AC:L/Au:N/C:N/I:P/A:P"},"cvssV3":{"attackComplexity":"","attackVector":"","availabilityImpact":"","baseScore":"","baseSeverity":"","confidentialityImpact":"","exploitabilityScore":"","impactScore":"","integrityImpact":"","privilegesRequired":"","scope":"","userInteraction":"","vectorString":""},"cwe_ids":["CWE-22"],"lastModifiedDate":"2023-02-13T00:53Z","publishedDate":"2015-11-06T18:59Z","references":["https://bugzilla.redhat.com/show_bug.cgi?id=1273969","https://access.redhat.com/errata/RHSA-2015:1945"]}},"modified":"2023-02-03T20:43:23Z","niah_id":"NIAH-go-k8s.io/kubernetes-GHSA-jp32-vmm6-3vf5","nvd_published_at":"2015-11-06T18:59:00Z","package":"k8s.io/kubernetes","published":"2022-02-15T01:57:18Z","purl":"","refeid":"GHSA-jp32-vmm6-3vf5","references":[],"severity":"MODERATE","summary":"Directory Traversal in Kubernetes","vendor":"","versions":["[0:1.1.1]"]}],"rowlimit":50,"total":2088}
